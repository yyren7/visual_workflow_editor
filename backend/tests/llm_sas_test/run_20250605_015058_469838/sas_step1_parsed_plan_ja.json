[
    {
        "section_title": "I. メインプログラム処理フロー",
        "content": [
            "ロボットモデル選択（例: \"dobot_mg400\"）。（ブロックタイプ：`ロボット選択`）",
            "ロボットモーター起動。（ブロックタイプ：`モーター制御`）",
            "必要プロセス制御変数初期化（例: `start_condition = 2`）。（ブロックタイプ：`数値設定`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "メインループ開始。（ブロックタイプ：`ループ`）",
            "条件確認：`start_condition = 2`（または連続運転用無限ループ）。（ブロックタイプ：`条件分岐`）",
            "**(オプション/無効ロジック)** 外部起動信号待機（例: 外部IO入力 `Start_Signal_IN`）。（ブロックタイプ：`外部IO入力待機`）",
            "サブプログラム `BRG_Get_BRG`（ベアリング取得）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "サブプログラム `Get_BH_InitialPos`（初期位置からベアリングハウジング取得）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "マシニングセンタ(RMC)準備完了信号（`RMC_Ready_IN`）を待機。（ブロックタイプ：`外部IO入力待機`）",
            "サブプログラム `RMC_Put_BH&BRG`（ベアリングハウジング及びベアリングをRMCへ配置）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "RMC加工完了信号（`RMC_Done_IN`）を待機。（ブロックタイプ：`外部IO入力待機`）",
            "部品搬出済/準備完了をRMCへ通知する信号（`RMC_PartTaken_OUT`）を送信。（ブロックタイプ：`出力設定`）",
            "RMC確認信号（`RMC_Confirm_IN`）を待機。（ブロックタイプ：`外部IO入力待機`）",
            "サブプログラム `RMC_Get_BH_Assembled`（組立済部品をRMCから取得）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "サブプログラム `LMC_Put_BH_Temp`（部品をLMCへ一時保管のため配置）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "サブプログラム `CNV_Get_PLT`（コンベアからパレット取得）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "サブプログラム `CNV_Put_PLT`（パレットをコンベアへ配置）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "サブプログラム `LMC_Get_BH_Stored`（LMCから保管済部品取得）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "ロボットが**初期/安全位置**（例: \"P_Home\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
            "サブプログラム `CNV_Put_BH_On_PLT`（コンベア上のパレットへ部品配置）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
            "**(オプション/無効ロジック)** タスク完了信号を外部システム（`Task_Complete_OUT`）へ送信。（ブロックタイプ：`出力設定`）",
            "ループ開始点へ復帰。（ブロックタイプ：`リターン`）"
        ]
    },
    {
        "section_title": "II. サブプログラムと機能説明",
        "sub_sections": [
            {
                "item_number": "1",
                "title": "**`BRG_Get_BRG` (ベアリング取得)**:",
                "function": "ロボットが指定初期位置（例：材料棚）からベアリングを取得。",
                "clamp_involved": "`BRG&PLT_Crump`（ベアリング及びパレット操作用クランプ）。",
                "core_logic": [
                    "ベアリング取出待機位置（例: \"P21\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "ベアリング取出上方位置（例: \"P22\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BRG&PLT_Crump`（BRG/PLTクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "ベアリング精密把持位置（例: \"P23\"）へ下降。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Close_BRG&PLT_Crump`（BRG/PLTクランプ閉）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "ベアリング保持し上昇（例: \"P25\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "ベアリング取出退避位置（例: \"P26\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "ベアリング取出待機位置（例: \"P21\"）へ復帰。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "2",
                "title": "**`Get_BH_InitialPos` (初期位置BH取得)**:",
                "function": "ロボットが指定初期位置からベアリングハウジングを取得。",
                "clamp_involved": "`BH_Crump`（ベアリングハウジング操作用クランプ）。",
                "core_logic": [
                    "BHピックアップ待機位置（例: \"P31\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "BHピックアップ上方位置（例: \"P32\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BH_Crump`（BHクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "BH精密把持位置（例: \"P33\"）へ下降。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Close_BH_Crump`（BHクランプ閉）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "BH保持し上昇（例: \"P32\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "BHピックアップ待機位置（例: \"P31\"）へ復帰。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "3",
                "title": "**`RMC_Put_BH&BRG` (RMCへBHとBRG配置)**:",
                "function": "ロボットが前回取得したBHとBRGを、RMCの指定ステーションへ順次配置。",
                "clamp_involved": "`BH_Crump`、`BRG&PLT_Crump`。",
                "core_logic": [
                    "RMC移動/通過点（例: \"P20\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "BH配置用RMC待機位置（例: \"P11\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC中間/受渡点（例: \"P12\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BHアクセスポイント（例: \"P14\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BH把持/解放点（例: \"P15\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BH_Crump`（BHクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "速度を10に設定。（ブロックタイプ：`数値設定`）",
                    "RMC BHアクセスポイント（例: \"P14\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "速度を100に設定。（ブロックタイプ：`数値設定`）",
                    "BRG配置用RMC待機位置（例: \"P13\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BRGホバー/アクセスポイント（例: \"P16\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BRG精密配置点（例: \"P17\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BRG&PLT_Crump`（BRG/PLTクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "速度を10に設定。（ブロックタイプ：`数値設定`）",
                    "RMC BRGホバー/アクセスポイント（例: \"P16\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "速度を100に設定。（ブロックタイプ：`数値設定`）",
                    "RMC中間/受渡点（例: \"P12\"）。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "4",
                "title": "**`RMC_Get_BH_Assembled` (RMCから組立済BH取得)**:",
                "function": "ロボットがRMCから組立済（または加工済）BHを取得。",
                "clamp_involved": "`BH_Crump`。",
                "core_logic": [
                    "組立済部品ピックアップ用RMC待機位置（例: \"P11\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC中間/受渡点（例: \"P12\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BHアクセスポイント（例: \"P14\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC BH把持/解放点（例: \"P15\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Close_BH_Crump`（BHクランプ閉）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "RMC BHアクセスポイント（例: \"P14\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC中間/受渡点（例: \"P12\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "部品を持ってRMC出発点（例: \"P11\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "RMC移動/通過点（例: \"P20\"）。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "5",
                "title": "**`LMC_Put_BH_Temp` (LMCへBH一時保管)**:",
                "function": "ロボットがRMCから取得した部品を、一時保管または後続処理のためLMCへ配置。",
                "clamp_involved": "`BH_Crump`。",
                "core_logic": [
                    "LMC受渡/待機点（例: \"P41\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMCホバー/アクセスポイント（例: \"P42\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMC把持/解放点（例: \"P43\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BH_Crump`（BHクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "LMCホバー/アクセスポイント（例: \"P42\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMC受渡/待機点（例: \"P41\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "主安全/初期位置（例: \"P1\"）へ復帰。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "6",
                "title": "**`CNV_Get_PLT` (コンベアからPLT取得)**:",
                "function": "ロボットが指定場所（コンベア別エリアの場合あり）から空パレットを取得。",
                "clamp_involved": "`BRG&PLT_Crump`。",
                "core_logic": [
                    "パレットハンドリング待機位置（例: \"P34\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "パレットピックアップホバー/上昇点（例: \"P35\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "速度を10に設定。（ブロックタイプ：`数値設定`）",
                    "パレット精密把持位置（例: \"P36\"）へ下降。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Close_BRG&PLT_Crump`（BRG/PLTクランプ閉）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "パレットピックアップホバー/上昇点（例: \"P35\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "速度を100に設定。（ブロックタイプ：`数値設定`）",
                    "パレットハンドリング待機位置（例: \"P34\"）。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "7",
                "title": "**`CNV_Put_PLT` (コンベアへPLT配置)**:",
                "function": "ロボットが取得した空パレットをコンベアの指定ステーションへ配置。",
                "clamp_involved": "`BRG&PLT_Crump`。",
                "core_logic": [
                    "CNVパレット配置ホバー/上昇点（例: \"P37\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "コンベア上のパレット精密配置点（例: \"P38\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BRG&PLT_Crump`（BRG/PLTクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "CNVパレット配置ホバー/上昇点（例: \"P37\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "パレットハンドリング待機位置（例: \"P34\"）。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "8",
                "title": "**`LMC_Get_BH_Stored` (LMCから保管済BH取得)**:",
                "function": "ロボットがLMCに前回保管した部品を取得。",
                "clamp_involved": "`BH_Crump`。",
                "core_logic": [
                    "LMC受渡/待機点（例: \"P41\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMCホバー/アクセスポイント（例: \"P42\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMC把持/解放点（例: \"P43\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Close_BH_Crump`（BHクランプ閉）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "LMCホバー/アクセスポイント（例: \"P42\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "LMC受渡/待機点（例: \"P41\"）。（ブロックタイプ：`位置移動 (P)`）"
                ]
            },
            {
                "item_number": "9",
                "title": "**`CNV_Put_BH_On_PLT` (コンベアPLTへBH配置)**:",
                "function": "ロボットがLMCから取得した部品を、コンベア上の事前配置済パレットへ正確に配置。",
                "clamp_involved": "`BH_Crump`。",
                "core_logic": [
                    "CNV部品オンパレットホバー/上昇点（例: \"P39\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "パレット上の部品精密配置点（例: \"P40\"）へ移動。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラム `Open_BH_Crump`（BHクランプ開）を呼出。（ブロックタイプ：`サブルーチン呼出 (戻り値なし)`）",
                    "CNV部品オンパレットホバー/上昇点（例: \"P39\"）。（ブロックタイプ：`位置移動 (P)`）",
                    "主安全/初期位置（例: \"P1\"）へ復帰。（ブロックタイプ：`位置移動 (P)`）",
                    "サブプログラムから復帰。（ブロックタイプ：`リターン`）"
                ]
            },
            {
                "item_number": "10",
                "title": "**`Open_BH_Crump` (BHクランプ開)**:",
                "function": "ロボットエンドエフェクタを制御し、BH保持用クランプを開く。",
                "clamp_involved": "",
                "core_logic": [
                    "クランプ操作のための所定遅延時間待機（例: 200 msec）。（ブロックタイプ：`タイマー待機`）",
                    "BHクランプ開信号送信（例: 出力ピン1をオン）。（ブロックタイプ：`出力設定`）",
                    "BHクランプ開確認フィードバック待機（例: 入力ピン0オン待ち）。（ブロックタイプ：`入力待機`）"
                ]
            },
            {
                "item_number": "11",
                "title": "**`Close_BH_Crump` (BHクランプ閉)**:",
                "function": "ロボットエンドエフェクタを制御し、BH保持用クランプを閉じる。",
                "clamp_involved": "",
                "core_logic": [
                    "クランプ操作のための所定遅延時間待機（例: 200 msec）。（ブロックタイプ：`タイマー待機`）",
                    "BHクランプ閉信号送信（例: 出力ピン1をオフ）。（ブロックタイプ：`出力設定`）",
                    "BHクランプ閉確認フィードバック待機（例: 入力ピン1オン待ち）。（ブロックタイプ：`入力待機`）"
                ]
            },
            {
                "item_number": "12",
                "title": "**`Open_BRG&PLT_Crump` (BRG/PLTクランプ開)**:",
                "function": "ロボットエンドエフェクタを制御し、BRGまたはPLT保持用クランプを開く。",
                "clamp_involved": "",
                "core_logic": [
                    "クランプ操作のための所定遅延時間待機（例: 200 msec）。（ブロックタイプ：`タイマー待機`）",
                    "BRG/PLTクランプ開信号送信（例: 出力ピン2をオン）。（ブロックタイプ：`出力設定`）",
                    "BRG/PLTクランプ開確認フィードバック待機（例: 入力ピン2オン待ち）。（ブロックタイプ：`入力待機`）"
                ]
            },
            {
                "item_number": "13",
                "title": "**`Close_BRG&PLT_Crump` (BRG/PLTクランプ閉)**:",
                "function": "ロボットエンドエフェクタを制御し、BRGまたはPLT保持用クランプを閉じる。",
                "clamp_involved": "",
                "core_logic": [
                    "クランプ操作のための所定遅延時間待機（例: 200 msec）。（ブロックタイプ：`タイマー待機`）",
                    "BRG/PLTクランプ閉信号送信（例: 出力ピン2をオフ）。（ブロックタイプ：`出力設定`）",
                    "BRG/PLTクランプ閉確認フィードバック待機（例: 入力ピン3オン待ち）。（ブロックタイプ：`入力待機`）"
                ]
            }
        ]
    },
    {
        "section_title": "III. モジュール化と再利用について",
        "content": [
            "**クランプ操作**: `Open/Close_BH_Crump`及び`Open/Close_BRG&PLT_Crump`は独立・再利用可能なサブプログラムです。各クランプ種の制御ロジックをカプセル化し、各種マテハンサブプログラム（`BRG_Get_BRG`、`Get_BH_InitialPos`、`RMC_Put_BH&BRG`等）から呼出されます。これにより一貫性を高め、保守を簡略化します。",
            "**標準動作シーケンス**: 大半のピックアンドプレースサブプログラム（`BRG_Get_BRG`、`Get_BH_InitialPos`、`CNV_Get_PLT`等）は、「目標接近→精密位置決め→動作実行（把持/解放）→目標離脱→安全位置復帰」の共通動作パターンに従います。このロジックは抽象化・再利用可能で、パラメータ化関数により異なる目標位置に対応できます。",
            "**速度制御**: 高精度や繊細な扱いを要する作業（例：`RMC_Put_BH&BRG`、`CNV_Get_PLT`）では、コアロジックが重要局面での低速化の必要性を明記しています。これはパラメータや専用低速移動関数で実装可能です。",
            "**外部連携と同期**: 主プロセスは外部装置（RMC、LMC、コンベア）との複数同期点を含みます。特定入力信号（`RMC_Ready_IN`、`RMC_Done_IN`）待機と出力信号（`RMC_PartTaken_OUT`、`Task_Complete_OUT`）送信で実現します。このモジュール方式で周辺環境との確実な連携を保証します。",
            "**オプションロジック**: 外部起動信号待機やタスク完了信号送信等はオプションです。これにより、システム統合要件に応じこれらの機能の有効/無効化が可能となり、コアプロセスフローを変更せずに柔軟な展開ができます。"
        ]
    }
] 