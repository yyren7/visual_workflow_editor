INFO:     Will watch for changes in these directories: ['/workspace/backend']
INFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [1366137] using WatchFiles
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
系统版本: 0.3.4
最后更新: 2025-03-11
版本信息已保存到数据库: 0.3.4, 2025-03-11
===== 环境变量调试信息 =====
时间: 2025-04-22T03:23:08.612866
Python版本: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
DEEPSEEK_API_KEY: sk-fa08f...3fa5 (长度: 35字符)
DEEPSEEK_BASE_URL: https://api.deepseek.com
所有环境变量: ['APP_LAST_UPDATED', 'APP_VERSION', 'BROWSER', 'COLORTERM', 'CORS_ORIGINS', 'DATABASE_URL', 'DEBUG', 'DEEPSEEK_API_KEY', 'DEEPSEEK_BASE_URL', 'DEEPSEEK_MODEL', 'EMBEDDING_LMSTUDIO_API_BASE_URL', 'EMBEDDING_LMSTUDIO_API_KEY', 'EMBEDDING_USE_LMSTUDIO', 'GIT_ASKPASS', 'GIT_EDITOR', 'GOOGLE_API_KEY', 'HOME', 'HOSTNAME', 'LANG', 'LESSCLOSE', 'LESSOPEN', 'LS_COLORS', 'OLDPWD', 'PATH', 'PROMPT_DIRTRIM', 'PWD', 'PYTHONPATH', 'REMOTE_CONTAINERS', 'REMOTE_CONTAINERS_IPC', 'REMOTE_CONTAINERS_SOCKETS', 'SECRET_KEY', 'SHELL', 'SHLVL', 'TERM', 'TERM_PROGRAM', 'TERM_PROGRAM_VERSION', 'TMUX', 'TMUX_PANE', 'USER', 'USE_GOOGLE_AI', 'VSCODE_GIT_ASKPASS_EXTRA_ARGS', 'VSCODE_GIT_ASKPASS_MAIN', 'VSCODE_GIT_ASKPASS_NODE', 'VSCODE_GIT_IPC_HANDLE', 'VSCODE_IPC_HOOK_CLI', '_']
=======================
2025-04-22 03:23:09,127 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 03:23:09,127 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 03:23:09,127 - app.main - INFO - 开始导入模块...
2025-04-22 03:23:09,127 - app.main - INFO - 导入database成功
2025-04-22 03:23:09,127 - app.main - INFO - 导入models成功
2025-04-22 03:23:09,127 - app.main - INFO - 导入config成功
2025-04-22 03:23:09,165 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 03:23:09,165 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 03:23:09,165 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 03:23:09,166 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 03:23:09 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 03:23:09,490 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 03:23:09 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 03:23:09,490 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 03:23:09,768 - app.main - INFO - 导入基本路由成功
2025-04-22 03:23:09,768 - app.main - INFO - 导入workflow_router成功
2025-04-22 03:23:09,768 - app.main - INFO - 导入utils成功
2025-04-22 03:23:09,768 - app.main - INFO - 导入dependencies成功
2025-04-22 03:23:09,768 - app.main - INFO - 创建数据库表...
2025-04-22 03:23:09,769 - app.main - INFO - 数据库表创建成功
2025-04-22 03:23:09,769 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 03:23:09,776 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 03:23:09,776 - app.main - INFO - 注册路由...
2025-04-22 03:23:09,782 - app.main - INFO - 注册user路由成功
2025-04-22 03:23:09,787 - app.main - INFO - 注册flow路由成功
2025-04-22 03:23:09,788 - app.main - INFO - 注册email路由成功
2025-04-22 03:23:09,789 - app.main - INFO - 注册auth路由成功
2025-04-22 03:23:09,789 - app.main - INFO - 注册node_templates路由成功
2025-04-22 03:23:09,789 - app.main - INFO - 注册workflow路由成功
2025-04-22 03:23:09,798 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 03:23:09,798 - app.main - INFO - 注册chat路由成功
2025-04-22 03:23:09,798 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1366196]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 03:23:09,804 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 03:23:09,805 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 03:23:09,805 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 03:23:09,805 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 03:23:09,805 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 03:23:09,805 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 03:23:09,805 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 03:23:09,805 - backend.app.startup - INFO - API前缀: /api
2025-04-22 03:23:09,805 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
INFO:     127.0.0.1:51754 - "OPTIONS /auth/verify-token HTTP/1.1" 200 OK
2025-04-22 03:23:13,708 - app.main - INFO - 收到请求: GET /auth/verify-token (来自: 127.0.0.1)
2025-04-22 03:23:13,709 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:13,721 - app.main - INFO - 请求完成: GET /auth/verify-token - 200 (耗时: 0.0124s)
INFO:     127.0.0.1:51776 - "GET /auth/verify-token HTTP/1.1" 200 OK
INFO:     127.0.0.1:51760 - "OPTIONS /flows HTTP/1.1" 200 OK
2025-04-22 03:23:13,793 - app.main - INFO - 收到请求: GET /flows (来自: 127.0.0.1)
2025-04-22 03:23:13,793 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:13,794 - app.main - INFO - 请求完成: GET /flows - 307 (耗时: 0.0009s)
INFO:     127.0.0.1:51776 - "GET /flows HTTP/1.1" 307 Temporary Redirect
INFO:     127.0.0.1:51760 - "OPTIONS /flows?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:51760 - "OPTIONS /flows/ HTTP/1.1" 200 OK
2025-04-22 03:23:13,902 - app.main - INFO - 收到请求: GET /flows (来自: 127.0.0.1)
2025-04-22 03:23:13,902 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:13,903 - app.main - INFO - 请求完成: GET /flows - 307 (耗时: 0.0007s)
INFO:     127.0.0.1:51776 - "GET /flows?skip=0&limit=100 HTTP/1.1" 307 Temporary Redirect
2025-04-22 03:23:14,023 - app.main - INFO - 收到请求: GET /flows/ (来自: 127.0.0.1)
2025-04-22 03:23:14,024 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:14,031 - app.main - INFO - 请求完成: GET /flows/ - 200 (耗时: 0.0074s)
INFO:     127.0.0.1:51784 - "GET /flows/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:51800 - "OPTIONS /flows/?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 03:23:14,419 - app.main - INFO - 收到请求: GET /flows/ (来自: 127.0.0.1)
2025-04-22 03:23:14,419 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:14,425 - app.main - INFO - 请求完成: GET /flows/ - 200 (耗时: 0.0057s)
INFO:     127.0.0.1:51784 - "GET /flows/?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:53110 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
INFO:     127.0.0.1:53112 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected HTTP/1.1" 200 OK
2025-04-22 03:23:32,385 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 03:23:32,386 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:32,397 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 03:23:32,402 - app.main - INFO - 收到请求: POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected (来自: 127.0.0.1)
2025-04-22 03:23:32,402 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '4', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:32,402 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0168s)
INFO:     127.0.0.1:45908 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 03:23:32,405 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 03:23:32,405 - app.main - INFO - 请求完成: POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected - 200 (耗时: 0.0033s)
INFO:     127.0.0.1:45910 - "POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected HTTP/1.1" 200 OK
2025-04-22 03:23:32,433 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 03:23:32,434 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
INFO:     127.0.0.1:53112 - "OPTIONS /node-templates/ HTTP/1.1" 200 OK
2025-04-22 03:23:32,442 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 03:23:32,445 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0112s)
INFO:     127.0.0.1:45908 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 03:23:32,447 - app.main - INFO - 收到请求: GET /node-templates/ (来自: 127.0.0.1)
2025-04-22 03:23:32,447 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:32,450 - app.main - INFO - 请求完成: GET /node-templates/ - 200 (耗时: 0.0026s)
INFO:     127.0.0.1:45910 - "GET /node-templates/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:53110 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 03:23:32,682 - app.main - INFO - 收到请求: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 03:23:32,682 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '16026', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:32,690 - app.main - INFO - 请求完成: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0080s)
INFO:     127.0.0.1:45908 - "PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
INFO:     127.0.0.1:53110 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 03:23:34,218 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 03:23:34,219 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:34,224 - backend.app.routers.flow - INFO - Attempting to get last valid chat ID for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb for user: 27c83191-caae-4df4-a217-b6398a62061b
2025-04-22 03:23:34,229 - backend.app.routers.flow - INFO - Recorded last chat ID f5585b38-840b-4e29-a94f-7b851319585c is valid for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb.
2025-04-22 03:23:34,230 - backend.app.routers.flow - INFO - Returning last chat ID for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 03:23:34,230 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 200 (耗时: 0.0116s)
INFO:     127.0.0.1:45908 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
INFO:     127.0.0.1:53110 - "OPTIONS /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 03:23:34,319 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 03:23:34,320 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:34,327 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 03:23:34,328 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 03:23:34,329 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 03:23:34,364 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 03:23:34,364 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 03:23:34,364 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 03:23:34,364 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 03:23:34,364 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 03:23:34,364 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 03:23:34,364 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 03:23:34,366 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 03:23:34,368 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0475s)
INFO:     127.0.0.1:45908 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:53110 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 03:23:34,431 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 03:23:34,431 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:34,436 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 03:23:34,437 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 03:23:34,438 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 03:23:34,480 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 03:23:34,481 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 03:23:34,481 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 03:23:34,481 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 03:23:34,482 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 03:23:34,484 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0522s)
INFO:     127.0.0.1:45908 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 03:23:34,522 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 03:23:34,522 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:34,526 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 03:23:34,527 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 03:23:34,528 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 03:23:34,563 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 03:23:34,564 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 03:23:34,564 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 03:23:34,564 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 03:23:34,565 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 03:23:34,566 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0435s)
INFO:     127.0.0.1:45910 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
INFO:     127.0.0.1:45936 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 03:23:39,091 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 03:23:39,091 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 03:23:39,098 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 03:23:39,098 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 03:23:39,100 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 03:23:39,150 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 03:23:39,150 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 03:23:39,150 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 03:23:39,150 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 03:23:39,152 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 03:23:39,153 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 03:23:39,153 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 03:23:39,165 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 03:23:39,165 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 03:23:39,166 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: Can't instantiate abstract class DbChatMemory with abstract method clear
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
TypeError: Can't instantiate abstract class DbChatMemory with abstract method clear
2025-04-22 03:23:39,166 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 03:23:39,167 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 03:23:39,167 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 03:23:39,167 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 03:23:39,167 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 03:23:39,167 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 03:23:39,167 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   ---
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 03:23:39,167 - backend.deepseek - INFO -   ---
2025-04-22 03:23:39,168 - backend.deepseek - INFO -   
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 03:23:39,168 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 03:23:39,168 - backend.deepseek - INFO -   
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 03:23:39,168 - backend.deepseek - INFO - JSON模式: False
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 流式响应: False
2025-04-22 03:23:39,168 - backend.deepseek - INFO - ==================================
2025-04-22 03:23:39,168 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 03:23:39,168 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 03:23:39,173 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 03:23:39,175 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 03:23:39,175 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 03:23:39,238 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x70857e333340>
2025-04-22 03:23:39,238 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x70857ed4df40> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 03:23:39,265 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x70857e333310>
2025-04-22 03:23:39,265 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 03:23:39,265 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 03:23:39,265 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 03:23:39,265 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 03:23:39,265 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 03:23:39,421 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 03:23:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'a2d051b703e34a61693d800569531eeb'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=XzbNFawr5Z6FJUnwKY6Z9PxPCrtYWeNGLGKxjZrwqyA-1745292219-1.0.1.1-ZxLmiCP9DTxZU_gela.Lo0c.XNip5RNQl.oHURVg.pkJ3bAj_aJFR7l.Bj7S6Rka6ApxMjSqNjJAdyTls8mPoLfQUtsLvF.issceo8VWfcw; path=/; expires=Tue, 22-Apr-25 03:53:39 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934200f28ad93bfd-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 03:23:39,422 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 03:23:39,423 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 03:23:48,757 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 03:23:48,758 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 03:23:48,758 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 03:23:48,758 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 03:23:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'a2d051b703e34a61693d800569531eeb', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=XzbNFawr5Z6FJUnwKY6Z9PxPCrtYWeNGLGKxjZrwqyA-1745292219-1.0.1.1-ZxLmiCP9DTxZU_gela.Lo0c.XNip5RNQl.oHURVg.pkJ3bAj_aJFR7l.Bj7S6Rka6ApxMjSqNjJAdyTls8mPoLfQUtsLvF.issceo8VWfcw; path=/; expires=Tue, 22-Apr-25 03:53:39 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '934200f28ad93bfd-NRT', 'content-encoding': 'gzip'})
2025-04-22 03:23:48,759 - openai._base_client - DEBUG - request_id: None
2025-04-22 03:23:48,775 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 205
2025-04-22 03:23:48,775 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 03:23:48,776 - backend.deepseek - INFO - 响应数据:
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   你的系统提示是：  
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   **“你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。”**
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   当前流程图上下文信息显示：  
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   - 流程图名称: test1  
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   - 节点数量: 28  
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   - 连接数量: 0  
2025-04-22 03:23:48,776 - backend.deepseek - INFO -   
2025-04-22 03:23:48,777 - backend.deepseek - INFO -   如果你有其他问题或需要进一步帮助，请告诉我！
2025-04-22 03:23:48,777 - backend.deepseek - INFO - ==================================
2025-04-22 03:23:48,777 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 03:23:48,777 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 03:23:48,777 - backend.langchainchat.chains.workflow_chain - ERROR - Error in WorkflowChain _acall for chat f5585b38-840b-4e29-a94f-7b851319585c: DeepSeekLLM.stream_chat_completion() got an unexpected keyword argument 'tools'
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 354, in _acall
    stream_generator = await self.llm.stream_chat_completion(
TypeError: DeepSeekLLM.stream_chat_completion() got an unexpected keyword argument 'tools'
2025-04-22 03:23:48,778 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 03:23:48,778 - backend.app.services.chat_service - INFO - WorkflowChain returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Processing...
2025-04-22 03:23:48,778 - backend.app.services.chat_service - ERROR - WorkflowChain returned an error: Chain execution failed: DeepSeekLLM.stream_chat_completion() got an unexpected keyword argument 'tools'
2025-04-22 03:23:48,790 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 03:23:48,790 - backend.app.routers.chat - INFO - Chat service returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing JSONResponse.
2025-04-22 03:23:48,793 - backend.app.routers.chat - INFO - (Non-stream) Updated Flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb last_interacted_chat_id to f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 03:23:48,794 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 9.7029s)

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我的系统提示是什么


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
你的系统提示是：  
**“你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。”**

当前流程图上下文信息显示：  
- 流程图名称: test1  
- 节点数量: 28  
- 连接数量: 0  

如果你有其他问题或需要进一步帮助，请告诉我！
========================================

INFO:     127.0.0.1:45936 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1366196]
2025-04-22 03:27:16,440 - httpcore.connection - DEBUG - close.started
2025-04-22 03:27:16,440 - httpcore.connection - DEBUG - close.complete
2025-04-22 03:27:17,119 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 03:27:17,119 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 03:27:17,119 - app.main - INFO - 开始导入模块...
2025-04-22 03:27:17,119 - app.main - INFO - 导入database成功
2025-04-22 03:27:17,119 - app.main - INFO - 导入models成功
2025-04-22 03:27:17,119 - app.main - INFO - 导入config成功
2025-04-22 03:27:17,156 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 03:27:17,156 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 03:27:17,156 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 03:27:17,157 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 03:27:17 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 03:27:17,472 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 03:27:17 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 03:27:17,473 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 03:27:17,732 - app.main - INFO - 导入基本路由成功
2025-04-22 03:27:17,732 - app.main - INFO - 导入workflow_router成功
2025-04-22 03:27:17,732 - app.main - INFO - 导入utils成功
2025-04-22 03:27:17,732 - app.main - INFO - 导入dependencies成功
2025-04-22 03:27:17,732 - app.main - INFO - 创建数据库表...
2025-04-22 03:27:17,733 - app.main - INFO - 数据库表创建成功
2025-04-22 03:27:17,733 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 03:27:17,740 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 03:27:17,740 - app.main - INFO - 注册路由...
2025-04-22 03:27:17,746 - app.main - INFO - 注册user路由成功
2025-04-22 03:27:17,751 - app.main - INFO - 注册flow路由成功
2025-04-22 03:27:17,752 - app.main - INFO - 注册email路由成功
2025-04-22 03:27:17,753 - app.main - INFO - 注册auth路由成功
2025-04-22 03:27:17,753 - app.main - INFO - 注册node_templates路由成功
2025-04-22 03:27:17,753 - app.main - INFO - 注册workflow路由成功
2025-04-22 03:27:17,762 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 03:27:17,762 - app.main - INFO - 注册chat路由成功
2025-04-22 03:27:17,763 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1367256]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 03:27:17,768 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 03:27:17,768 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 03:27:17,768 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 03:27:17,768 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 03:27:17,768 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 03:27:17,768 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 03:27:17,768 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 03:27:17,768 - backend.app.startup - INFO - API前缀: /api
2025-04-22 03:27:17,768 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/memory/db_chat_memory.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1367256]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 04:13:10,455 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 04:13:10,456 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 04:13:10,456 - app.main - INFO - 开始导入模块...
2025-04-22 04:13:10,456 - app.main - INFO - 导入database成功
2025-04-22 04:13:10,456 - app.main - INFO - 导入models成功
2025-04-22 04:13:10,456 - app.main - INFO - 导入config成功
2025-04-22 04:13:10,496 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 04:13:10,496 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 04:13:10,496 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 04:13:10,497 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 04:13:10 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:13:10,812 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:13:10 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:13:10,812 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:13:11,068 - app.main - INFO - 导入基本路由成功
2025-04-22 04:13:11,068 - app.main - INFO - 导入workflow_router成功
2025-04-22 04:13:11,069 - app.main - INFO - 导入utils成功
2025-04-22 04:13:11,069 - app.main - INFO - 导入dependencies成功
2025-04-22 04:13:11,069 - app.main - INFO - 创建数据库表...
2025-04-22 04:13:11,069 - app.main - INFO - 数据库表创建成功
2025-04-22 04:13:11,069 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 04:13:11,075 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 04:13:11,076 - app.main - INFO - 注册路由...
2025-04-22 04:13:11,080 - app.main - INFO - 注册user路由成功
2025-04-22 04:13:11,085 - app.main - INFO - 注册flow路由成功
2025-04-22 04:13:11,086 - app.main - INFO - 注册email路由成功
2025-04-22 04:13:11,086 - app.main - INFO - 注册auth路由成功
2025-04-22 04:13:11,087 - app.main - INFO - 注册node_templates路由成功
2025-04-22 04:13:11,087 - app.main - INFO - 注册workflow路由成功
2025-04-22 04:13:11,095 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 04:13:11,095 - app.main - INFO - 注册chat路由成功
2025-04-22 04:13:11,095 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1372798]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 04:13:11,100 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 04:13:11,101 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 04:13:11,101 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 04:13:11,101 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 04:13:11,101 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 04:13:11,101 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 04:13:11,101 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 04:13:11,101 - backend.app.startup - INFO - API前缀: /api
2025-04-22 04:13:11,101 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
INFO:     127.0.0.1:48886 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 04:15:03,520 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:15:03,520 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:15:03,528 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:15:03,529 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:15:03,530 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:15:03,561 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:15:03,561 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:15:03,562 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:15:03,562 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 04:15:03,562 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 04:15:03,562 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 04:15:03,562 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:15:03,563 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:15:03,566 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:15:03,566 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 04:15:03,578 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:15:03,578 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:15:03,578 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:15:03,578 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:15:03,578 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:15:03,578 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:15:03,578 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:15:03,579 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:15:03,579 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:15:03,580 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:15:03,580 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:15:03,580 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:15:03,580 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:15:03,580 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:15:03,580 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:15:03,580 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   ---
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   ---
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 04:15:03,581 - backend.deepseek - INFO -   
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:15:03,581 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:15:03,581 - backend.deepseek - INFO - ==================================
2025-04-22 04:15:03,581 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:15:03,581 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:15:03,586 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:15:03,588 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:15:03,588 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:15:03,687 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x710b3e906860>
2025-04-22 04:15:03,687 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x710b3ebb35c0> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:15:03,721 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x710b3e906830>
2025-04-22 04:15:03,722 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:15:03,723 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:15:03,724 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:15:03,724 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:15:03,725 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:15:03,867 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:15:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'9ab75ad78d23bda9acbb785bf8d09f24'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=KGGOk7fQVurwCuKcVxn6OiNziCgoPdAShtt5ImUENlY-1745295303-1.0.1.1-_v_hXQLe0ME4Kd.CJIXWFC9zdhdYCE_WAL.973GfOAUeimVlRuuJ6CWS5KcXziqgEkRcCYb0vfat_a.ojO2zIz3m1IIQ4bWW.GjybLPZpmI; path=/; expires=Tue, 22-Apr-25 04:45:03 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93424c406998e36e-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:15:03,870 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:15:03,870 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:15:12,902 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:15:12,903 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:15:12,903 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:15:12,903 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:15:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '9ab75ad78d23bda9acbb785bf8d09f24', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=KGGOk7fQVurwCuKcVxn6OiNziCgoPdAShtt5ImUENlY-1745295303-1.0.1.1-_v_hXQLe0ME4Kd.CJIXWFC9zdhdYCE_WAL.973GfOAUeimVlRuuJ6CWS5KcXziqgEkRcCYb0vfat_a.ojO2zIz3m1IIQ4bWW.GjybLPZpmI; path=/; expires=Tue, 22-Apr-25 04:45:03 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '93424c406998e36e-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:15:12,904 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:15:12,911 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 169
2025-04-22 04:15:12,911 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:15:12,911 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:15:12,911 - backend.deepseek - INFO -   你的系统提示是：
2025-04-22 04:15:12,912 - backend.deepseek - INFO -   
2025-04-22 04:15:12,912 - backend.deepseek - INFO -   > 你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:15:12,912 - backend.deepseek - INFO -   > 你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:15:12,912 - backend.deepseek - INFO -   
2025-04-22 04:15:12,912 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:15:12,913 - backend.deepseek - INFO -   ---
2025-04-22 04:15:12,913 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:15:12,913 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:15:12,913 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:15:12,913 - backend.deepseek - INFO -   ---
2025-04-22 04:15:12,914 - backend.deepseek - INFO - ==================================
2025-04-22 04:15:12,914 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:15:12,914 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:15:12,914 - backend.langchainchat.chains.workflow_chain - ERROR - Error in WorkflowChain _acall for chat f5585b38-840b-4e29-a94f-7b851319585c: object async_generator can't be used in 'await' expression
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 354, in _acall
    stream_generator = await self.llm.stream_chat_completion(
TypeError: object async_generator can't be used in 'await' expression
2025-04-22 04:15:12,915 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:15:12,916 - backend.app.services.chat_service - INFO - WorkflowChain returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Processing...
2025-04-22 04:15:12,916 - backend.app.services.chat_service - ERROR - WorkflowChain returned an error: Chain execution failed: object async_generator can't be used in 'await' expression
2025-04-22 04:15:12,932 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:15:12,932 - backend.app.routers.chat - INFO - Chat service returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing JSONResponse.
2025-04-22 04:15:12,938 - backend.app.routers.chat - INFO - (Non-stream) Updated Flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb last_interacted_chat_id to f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:15:12,940 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 9.4194s)

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我的系统提示是什么


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
你的系统提示是：

> 你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
> 你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---
========================================

INFO:     127.0.0.1:48886 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1372798]
2025-04-22 04:24:21,047 - httpcore.connection - DEBUG - close.started
2025-04-22 04:24:21,048 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:24:21,687 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 04:24:21,687 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 04:24:21,687 - app.main - INFO - 开始导入模块...
2025-04-22 04:24:21,687 - app.main - INFO - 导入database成功
2025-04-22 04:24:21,687 - app.main - INFO - 导入models成功
2025-04-22 04:24:21,687 - app.main - INFO - 导入config成功
2025-04-22 04:24:21,726 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 04:24:21,726 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 04:24:21,726 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 04:24:21,728 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 04:24:22 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:24:22,038 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:24:22 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:24:22,038 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:24:22,307 - app.main - INFO - 导入基本路由成功
2025-04-22 04:24:22,307 - app.main - INFO - 导入workflow_router成功
2025-04-22 04:24:22,307 - app.main - INFO - 导入utils成功
2025-04-22 04:24:22,307 - app.main - INFO - 导入dependencies成功
2025-04-22 04:24:22,307 - app.main - INFO - 创建数据库表...
2025-04-22 04:24:22,308 - app.main - INFO - 数据库表创建成功
2025-04-22 04:24:22,308 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 04:24:22,315 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 04:24:22,315 - app.main - INFO - 注册路由...
2025-04-22 04:24:22,320 - app.main - INFO - 注册user路由成功
2025-04-22 04:24:22,325 - app.main - INFO - 注册flow路由成功
2025-04-22 04:24:22,326 - app.main - INFO - 注册email路由成功
2025-04-22 04:24:22,326 - app.main - INFO - 注册auth路由成功
2025-04-22 04:24:22,327 - app.main - INFO - 注册node_templates路由成功
2025-04-22 04:24:22,327 - app.main - INFO - 注册workflow路由成功
2025-04-22 04:24:22,335 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 04:24:22,335 - app.main - INFO - 注册chat路由成功
2025-04-22 04:24:22,335 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1374360]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 04:24:22,341 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 04:24:22,341 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 04:24:22,341 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 04:24:22,341 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 04:24:22,341 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 04:24:22,341 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 04:24:22,341 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 04:24:22,341 - backend.app.startup - INFO - API前缀: /api
2025-04-22 04:24:22,341 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
INFO:     127.0.0.1:58486 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 04:27:58,678 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:27:58,679 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:27:58,688 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:27:58,689 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:27:58,690 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:27:58,723 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:27:58,724 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:27:58,724 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:27:58,724 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 04:27:58,724 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 04:27:58,724 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 04:27:58,724 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:27:58,726 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:27:58,729 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:27:58,729 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 04:27:58,743 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:27:58,743 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:27:58,743 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:27:58,744 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:27:58,744 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:27:58,744 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:27:58,744 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:27:58,745 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:27:58,746 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:27:58,746 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:27:58,746 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:27:58,746 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:27:58,746 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:27:58,747 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   ---
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   ---
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 04:27:58,747 - backend.deepseek - INFO -   
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:27:58,747 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:27:58,747 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:27:58,748 - backend.deepseek - INFO - ==================================
2025-04-22 04:27:58,748 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:27:58,748 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:27:58,753 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:27:58,754 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:27:58,755 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:27:58,864 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe747efe860>
2025-04-22 04:27:58,864 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fe747fa75c0> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:27:58,894 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fe747efe830>
2025-04-22 04:27:58,895 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:27:58,895 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:27:58,895 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:27:58,896 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:27:58,896 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:27:59,043 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:27:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'ff677220a80a2d5a800d88bd6e589567'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=0wZ1Mn3nQdhwOPUdftbW6qafpcQfdhG8ZsB10HL0u04-1745296079-1.0.1.1-JsJfTxvSJSl1ekEBILNZE9lYXSpwORVBP.YabuVa9IImWBwwqzuavqjmS.BMpNukft87GE9oSbEsiLuTucm_JC7Hf18l.eMxXflT.r0T_ho; path=/; expires=Tue, 22-Apr-25 04:57:59 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93425f2d3965afd5-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:27:59,045 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:27:59,045 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:28:06,211 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:28:06,212 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:28:06,212 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:28:06,212 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:27:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'ff677220a80a2d5a800d88bd6e589567', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=0wZ1Mn3nQdhwOPUdftbW6qafpcQfdhG8ZsB10HL0u04-1745296079-1.0.1.1-JsJfTxvSJSl1ekEBILNZE9lYXSpwORVBP.YabuVa9IImWBwwqzuavqjmS.BMpNukft87GE9oSbEsiLuTucm_JC7Hf18l.eMxXflT.r0T_ho; path=/; expires=Tue, 22-Apr-25 04:57:59 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '93425f2d3965afd5-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:28:06,212 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:28:06,224 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 97
2025-04-22 04:28:06,224 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:28:06,224 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   您的系统提示是当前流程图的上下文信息，具体如下：
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   - **流程图名称**: test1
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   - **节点数量**: 28
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   - **连接数量**: 0
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   
2025-04-22 04:28:06,225 - backend.deepseek - INFO -   如果您需要进一步操作或修改流程图，请告诉我！
2025-04-22 04:28:06,225 - backend.deepseek - INFO - ==================================
2025-04-22 04:28:06,226 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:28:06,226 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:28:06,226 - backend.langchainchat.chains.workflow_chain - ERROR - Error in WorkflowChain _acall for chat f5585b38-840b-4e29-a94f-7b851319585c: 1 validation error for WorkflowChainOutput
summary
  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 360, in _acall
    final_output_object = WorkflowChainOutput(
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for WorkflowChainOutput
summary
  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
2025-04-22 04:28:06,227 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:28:06,227 - backend.app.services.chat_service - INFO - WorkflowChain returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Processing...
2025-04-22 04:28:06,227 - backend.app.services.chat_service - ERROR - WorkflowChain returned an error: Chain execution failed: 1 validation error for WorkflowChainOutput
summary
  Input should be a valid string [type=string_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.7/v/string_type
2025-04-22 04:28:06,241 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:28:06,241 - backend.app.routers.chat - INFO - Chat service returned non-streaming output for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing JSONResponse.
2025-04-22 04:28:06,244 - backend.app.routers.chat - INFO - (Non-stream) Updated Flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb last_interacted_chat_id to f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:28:06,245 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 7.5663s)

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我的系统提示是什么


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
您的系统提示是当前流程图的上下文信息，具体如下：

- **流程图名称**: test1
- **节点数量**: 28
- **连接数量**: 0

如果您需要进一步操作或修改流程图，请告诉我！
========================================

INFO:     127.0.0.1:58486 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1374360]
2025-04-22 04:30:07,045 - httpcore.connection - DEBUG - close.started
2025-04-22 04:30:07,045 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:30:07,730 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 04:30:07,730 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 04:30:07,730 - app.main - INFO - 开始导入模块...
2025-04-22 04:30:07,730 - app.main - INFO - 导入database成功
2025-04-22 04:30:07,730 - app.main - INFO - 导入models成功
2025-04-22 04:30:07,731 - app.main - INFO - 导入config成功
2025-04-22 04:30:07,771 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 04:30:07,771 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 04:30:07,771 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 04:30:07,772 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 04:30:08 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:30:08,079 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:30:08 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:30:08,079 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:30:08,344 - app.main - INFO - 导入基本路由成功
2025-04-22 04:30:08,344 - app.main - INFO - 导入workflow_router成功
2025-04-22 04:30:08,344 - app.main - INFO - 导入utils成功
2025-04-22 04:30:08,344 - app.main - INFO - 导入dependencies成功
2025-04-22 04:30:08,344 - app.main - INFO - 创建数据库表...
2025-04-22 04:30:08,345 - app.main - INFO - 数据库表创建成功
2025-04-22 04:30:08,345 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 04:30:08,351 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 04:30:08,351 - app.main - INFO - 注册路由...
2025-04-22 04:30:08,356 - app.main - INFO - 注册user路由成功
2025-04-22 04:30:08,360 - app.main - INFO - 注册flow路由成功
2025-04-22 04:30:08,362 - app.main - INFO - 注册email路由成功
2025-04-22 04:30:08,362 - app.main - INFO - 注册auth路由成功
2025-04-22 04:30:08,362 - app.main - INFO - 注册node_templates路由成功
2025-04-22 04:30:08,362 - app.main - INFO - 注册workflow路由成功
2025-04-22 04:30:08,370 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 04:30:08,370 - app.main - INFO - 注册chat路由成功
2025-04-22 04:30:08,371 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1375256]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 04:30:08,376 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 04:30:08,376 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 04:30:08,376 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 04:30:08,376 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 04:30:08,376 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 04:30:08,376 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 04:30:08,376 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 04:30:08,376 - backend.app.startup - INFO - API前缀: /api
2025-04-22 04:30:08,376 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
2025-04-22 04:30:17,023 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:30:17,024 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:30:17,036 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:30:17,037 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:30:17,039 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:30:17,080 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:30:17,080 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:30:17,080 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:30:17,080 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 04:30:17,080 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 04:30:17,080 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 04:30:17,080 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:30:17,082 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:30:17,084 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:30:17,084 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 04:30:17,098 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:30:17,098 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:30:17,098 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:30:17,098 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:30:17,098 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:30:17,098 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:30:17,098 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:30:17,099 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:30:17,099 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:30:17,100 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:30:17,100 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:30:17,100 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:30:17,100 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:30:17,100 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:30:17,100 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   ---
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:30:17,100 - backend.deepseek - INFO -   ---
2025-04-22 04:30:17,101 - backend.deepseek - INFO -   
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:30:17,101 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 04:30:17,101 - backend.deepseek - INFO -   
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:30:17,101 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:30:17,101 - backend.deepseek - INFO - ==================================
2025-04-22 04:30:17,101 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:30:17,101 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:30:17,106 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:30:17,107 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:30:17,108 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:30:17,148 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec848ea770>
2025-04-22 04:30:17,148 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x75ec8499ba40> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:30:17,175 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec848ea740>
2025-04-22 04:30:17,175 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:30:17,175 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:30:17,175 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:30:17,176 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:30:17,176 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:30:17,349 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:30:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'5e46ee474544db908a1b559b281644f2'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jek5ogDXSw_iaje3cu5p.Runxeej3hFosU4CJj3cDCU-1745296217-1.0.1.1-90oV60MxpOYgiqfEuFRTORXU_VZNGd.9fYfOkI5TO2tBqu67qgE2PbXRLUZZ8e6xjP6J2bsWb3JSCilb0Ui5_sS5oBq0_EZ9v7NU3ZagXr4; path=/; expires=Tue, 22-Apr-25 05:00:17 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9342628d78ced5c4-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:30:17,351 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:30:17,351 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:30:26,171 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:30:26,172 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:30:26,172 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:30:26,172 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:30:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '5e46ee474544db908a1b559b281644f2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=jek5ogDXSw_iaje3cu5p.Runxeej3hFosU4CJj3cDCU-1745296217-1.0.1.1-90oV60MxpOYgiqfEuFRTORXU_VZNGd.9fYfOkI5TO2tBqu67qgE2PbXRLUZZ8e6xjP6J2bsWb3JSCilb0Ui5_sS5oBq0_EZ9v7NU3ZagXr4; path=/; expires=Tue, 22-Apr-25 05:00:17 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9342628d78ced5c4-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:30:26,173 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:30:26,180 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 188
2025-04-22 04:30:26,180 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:30:26,180 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   当前系统提示是：你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   当前流程图上下文信息如下：
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   - 流程图名称: test1
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   - 节点数量: 28
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   - 连接数量: 0
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   
2025-04-22 04:30:26,180 - backend.deepseek - INFO -   如果你有其他问题或需要进一步操作，请告诉我！
2025-04-22 04:30:26,180 - backend.deepseek - INFO - ==================================
2025-04-22 04:30:26,181 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:30:26,181 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:30:26,181 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:30:26,181 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 04:30:26,181 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 04:30:26,182 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 04:30:26,182 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 04:30:26,183 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:30:26,183 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:30:26,183 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:30:26,183 - backend.deepseek - INFO - 流式响应: True
2025-04-22 04:30:26,183 - backend.deepseek - INFO - ==================================
2025-04-22 04:30:26,183 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 04:30:26,184 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 04:30:26,195 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 04:30:26,196 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:30:26,196 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:30:26,196 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:30:26,197 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:30:26,197 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:30:26,197 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:30:26,337 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:30:26 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'f77219e7c6bd17690f4892d4809eb23f'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934262c5dfffd5c4-NRT')])
2025-04-22 04:30:26,338 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:30:26,338 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:30:26 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'f77219e7c6bd17690f4892d4809eb23f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '934262c5dfffd5c4-NRT'})
2025-04-22 04:30:26,339 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:30:26,339 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我的系统提示是什么


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
当前系统提示是：你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文信息如下：
- 流程图名称: test1
- 节点数量: 28
- 连接数量: 0

如果你有其他问题或需要进一步操作，请告诉我！
========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

根据2025-04-22 04:30:29,833 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 12.8093s)
INFO:     127.0.0.1:42944 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
当前的流程图上下文信息，您的系统提示如下：

**流程图名称**: test1  
**节点数量**: 28  
**连接数量**: 0  

目前您的流程图"test1"中有28个节点，但尚未建立任何连接（连线）。如果需要进一步操作（如添加连接、修改节点等），可以告诉我具体需求，我会协助您完成。2025-04-22 04:30:33,543 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:30:33,543 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:30:33,543 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:30:33,543 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 04:30:33,544 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 04:30:33,545 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 04:30:33,546 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 04:30:33,546 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:30:33,547 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:30:33,548 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:30:33,599 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:30:33,599 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:30:33,599 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:30:33,599 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:30:33,600 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:30:33,600 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 04:30:33,600 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 04:30:33,611 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:30:33,611 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 04:30:33,611 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 04:30:33,611 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.
2025-04-22 04:31:03,550 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:31:03,551 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '76', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:31:03,557 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:31:03,558 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:31:03,559 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:31:03,595 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:31:03,595 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:31:03,596 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:31:03,596 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:31:03,596 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:31:03,597 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:31:03,597 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 为什么连线情况没有被保存在数据库...
2025-04-22 04:31:03,609 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:31:03,609 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:31:03,609 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:31:03,609 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:31:03,609 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:31:03,609 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 为什么连线情况没有被保存在数据库... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:31:03,609 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:31:03,610 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:31:03,610 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:31:03,610 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:31:03,611 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:31:03,611 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:31:03,611 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:31:03,611 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:31:03,611 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   ---
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   ---
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   
2025-04-22 04:31:03,611 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:31:03,611 - backend.deepseek - INFO -   为什么连线情况没有被保存在数据库
2025-04-22 04:31:03,611 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:31:03,611 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:31:03,611 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:31:03,612 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:31:03,612 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:31:03,612 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:31:03,612 - backend.deepseek - INFO - ==================================
2025-04-22 04:31:03,612 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:31:03,612 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:31:03,617 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '为什么连线情况没有被保存在数据库'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:31:03,617 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:31:03,617 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:31:03,657 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec8485a440>
2025-04-22 04:31:03,657 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x75ec848b7d40> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:31:03,684 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec8485a230>
2025-04-22 04:31:03,684 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:31:03,685 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:31:03,685 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:31:03,685 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:31:03,685 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:31:03,843 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:31:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'3b1924f5007412687c8ed66a3dec4ac7'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=NPDCx452oTuoXznqSWuXtBeFws_Eha6KRpXVXXLm..M-1745296263-1.0.1.1-fX04jkfnEPAJBohN4jGAePGeUw037ww5Vom2NAwQw3lUOrR8AXNqnVANheIpLToI8THY3RYGIHdIXqzqOQokByflAAV6AX50yWLJ01lkitQ; path=/; expires=Tue, 22-Apr-25 05:01:03 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934263b02b40e376-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:31:03,844 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:31:03,845 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:31:29,406 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:31:29,406 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:31:29,406 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:31:29,406 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:31:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '3b1924f5007412687c8ed66a3dec4ac7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=NPDCx452oTuoXznqSWuXtBeFws_Eha6KRpXVXXLm..M-1745296263-1.0.1.1-fX04jkfnEPAJBohN4jGAePGeUw037ww5Vom2NAwQw3lUOrR8AXNqnVANheIpLToI8THY3RYGIHdIXqzqOQokByflAAV6AX50yWLJ01lkitQ; path=/; expires=Tue, 22-Apr-25 05:01:03 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '934263b02b40e376-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:31:29,407 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:31:29,408 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 0
2025-04-22 04:31:29,408 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:31:29,409 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:31:29,409 - backend.deepseek - INFO -   
2025-04-22 04:31:29,409 - backend.deepseek - INFO - ==================================
2025-04-22 04:31:29,409 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:31:29,409 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:31:29,410 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:31:29,410 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 04:31:29,411 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 04:31:29,412 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 04:31:29,412 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 04:31:29,413 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:31:29,413 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:31:29,413 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:31:29,413 - backend.deepseek - INFO - 流式响应: True
2025-04-22 04:31:29,413 - backend.deepseek - INFO - ==================================
2025-04-22 04:31:29,413 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 04:31:29,414 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 04:31:29,427 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '为什么连线情况没有被保存在数据库'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 04:31:29,428 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:31:29,428 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:31:29,429 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:31:29,429 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:31:29,429 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:31:29,429 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:31:29,583 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:31:29 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'36b608532871703f68e225b3a6ad70b4'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934264510ea2e376-NRT')])
2025-04-22 04:31:29,584 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:31:29,584 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:31:29 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '36b608532871703f68e225b3a6ad70b4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '934264510ea2e376-NRT'})
2025-04-22 04:31:29,584 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:31:29,584 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>



======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
为什么连线情况没有被保存在数据库

工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========

========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

连线2025-04-22 04:31:33,156 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 29.6054s)
INFO:     127.0.0.1:58026 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
情况没有被保存在数据库可能有以下几个原因：

1. **数据保存逻辑问题**：当前的流程图保存功能可能只保存了节点信息，而没有处理连线数据的保存逻辑。

2. **连线数据结构问题**：连线数据可能没有被正确转换为可存储的格式，或者没有包含在最终保存的数据结构中。

3. **数据库设计问题**：数据库表中可能缺少存储连线关系的字段或关联表。

4. **前端提交问题**：前端可能在提交数据时没有包含连线信息。

5. **API接口问题**：后端API可能没有接收或处理连线数据的相关参数。

建议检查：
- 查看流程图保存时的完整数据结构
- 检查数据库表结构是否支持存储连线关系
- 验证前后端数据传输是否包含连线信息
- 检查保存功能的完整实现逻辑

需要更具体的系统实现细节才能确定确切原因。您是否想让我帮您检查具体的流程图保存实现？2025-04-22 04:31:43,249 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:31:43,249 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:31:43,249 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:31:43,250 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 04:31:43,250 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 04:31:43,252 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 04:31:43,252 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 04:31:43,252 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:31:43,253 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:31:43,255 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:31:43,302 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:31:43,302 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:31:43,302 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:31:43,302 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:31:43,303 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:31:43,303 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 04:31:43,303 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 04:31:43,315 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:31:43,315 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 04:31:43,315 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 04:31:43,315 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.
2025-04-22 04:32:13,697 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:32:13,698 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '58', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:32:13,703 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:32:13,703 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:32:13,704 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:32:13,745 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:32:13,745 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:32:13,745 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:32:13,745 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:32:13,746 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:32:13,747 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:32:13,747 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我们的对话历史有哪些...
2025-04-22 04:32:13,758 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:32:13,758 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:32:13,758 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:32:13,759 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:32:13,759 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:32:13,759 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我们的对话历史有哪些... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:32:13,759 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:32:13,759 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:32:13,760 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:32:13,760 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:32:13,760 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:32:13,760 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:32:13,760 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:32:13,760 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:32:13,760 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:32:13,760 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   ---
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   ---
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:32:13,761 - backend.deepseek - INFO -   我们的对话历史有哪些
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:32:13,761 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:32:13,761 - backend.deepseek - INFO - ==================================
2025-04-22 04:32:13,761 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:32:13,761 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:32:13,766 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的对话历史有哪些'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:32:13,767 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:32:13,767 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:32:13,829 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec847a8e50>
2025-04-22 04:32:13,829 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x75ec848b7c40> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:32:13,856 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec847a8e20>
2025-04-22 04:32:13,856 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:32:13,857 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:32:13,857 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:32:13,857 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:32:13,858 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:32:14,025 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:32:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'0edb1364f224e973eb6532531e7c1c45'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=HA4AbQE6DS4CNv_ReT7r2p2q6ORMeA4HMPuh9dk7Vog-1745296334-1.0.1.1-4jFE492VCjr65w4VrU2nK4dhzCy5ypy4_2Xj5iWftBqLKs23Hsw7PxEGV5QG.6QvrnLGOMLYY_0P9e_57Q1vlMyt9sIdddI2uFpr2WB6cfQ; path=/; expires=Tue, 22-Apr-25 05:02:14 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93426566ba41ec0e-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:32:14,027 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:32:14,027 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:32:20,811 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:32:20,811 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:32:20,811 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:32:20,811 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:32:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '0edb1364f224e973eb6532531e7c1c45', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=HA4AbQE6DS4CNv_ReT7r2p2q6ORMeA4HMPuh9dk7Vog-1745296334-1.0.1.1-4jFE492VCjr65w4VrU2nK4dhzCy5ypy4_2Xj5iWftBqLKs23Hsw7PxEGV5QG.6QvrnLGOMLYY_0P9e_57Q1vlMyt9sIdddI2uFpr2WB6cfQ; path=/; expires=Tue, 22-Apr-25 05:02:14 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '93426566ba41ec0e-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:32:20,811 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:32:20,812 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 119
2025-04-22 04:32:20,812 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:32:20,812 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:32:20,812 - backend.deepseek - INFO -   我们的对话历史如下：
2025-04-22 04:32:20,813 - backend.deepseek - INFO -   
2025-04-22 04:32:20,813 - backend.deepseek - INFO -   1. **初始对话**：你提供了一个流程图上下文信息，名称为“test1”，包含28个节点和0个连接。
2025-04-22 04:32:20,813 - backend.deepseek - INFO -   2. **当前对话**：你询问了“我们的对话历史有哪些”。
2025-04-22 04:32:20,813 - backend.deepseek - INFO -   
2025-04-22 04:32:20,813 - backend.deepseek - INFO -   如果你需要更详细的对话历史或其他信息，请告诉我！
2025-04-22 04:32:20,813 - backend.deepseek - INFO - ==================================
2025-04-22 04:32:20,813 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:32:20,813 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:32:20,814 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:32:20,814 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 04:32:20,814 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 04:32:20,815 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 04:32:20,815 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 04:32:20,815 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:32:20,815 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:32:20,815 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:32:20,815 - backend.deepseek - INFO - 流式响应: True
2025-04-22 04:32:20,815 - backend.deepseek - INFO - ==================================
2025-04-22 04:32:20,815 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 04:32:20,815 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 04:32:20,819 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的对话历史有哪些'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 04:32:20,820 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:32:20,820 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:32:20,820 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:32:20,820 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:32:20,820 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:32:20,820 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:32:20,975 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:32:20 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'a49b54d8a2cdaf26cf0d2b31b6f67e9f'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934265923faeec0e-NRT')])
2025-04-22 04:32:20,976 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:32:20,976 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:32:20 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'a49b54d8a2cdaf26cf0d2b31b6f67e9f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '934265923faeec0e-NRT'})
2025-04-22 04:32:20,976 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:32:20,977 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>



======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我们的对话历史有哪些

工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
我们的对话历史如下：

1. **初始对话**：你提供了一个流程图上下文信息，名称为“test1”，包含28个节点和0个连接。
2. **当前对话**：你询问了“我们的对话历史有哪些”。

如果你需要更详细的对话历史或其他信息，请告诉我！
========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

目前2025-04-22 04:32:25,740 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 12.0416s)
INFO:     127.0.0.1:37786 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
我们的对话历史如下：

1. 您创建了一个名为"test1"的流程图，当前包含28个节点，但还没有任何连接关系。

这是目前为止我们之间的全部对话记录。由于这是新开启的对话，所以历史记录比较简短。我可以为您：
- 继续完善test1流程图（添加连接/修改节点）
- 创建新的流程图
- 回答关于流程图绘制的问题

您想进行什么操作呢？2025-04-22 04:32:30,528 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:32:30,529 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:32:30,529 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:32:30,529 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 04:32:30,529 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 04:32:30,531 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 04:32:30,532 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 04:32:30,532 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:32:30,532 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:32:30,534 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:32:30,581 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:32:30,581 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:32:30,581 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:32:30,581 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:32:30,581 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:32:30,582 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 04:32:30,582 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 04:32:30,592 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:32:30,593 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 04:32:30,593 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 04:32:30,593 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.


INFO:     127.0.0.1:37794 - "OPTIONS /auth/verify-token HTTP/1.1" 200 OK
2025-04-22 04:33:05,014 - app.main - INFO - 收到请求: GET /auth/verify-token (来自: 127.0.0.1)
2025-04-22 04:33:05,014 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,021 - app.main - INFO - 请求完成: GET /auth/verify-token - 200 (耗时: 0.0065s)
INFO:     127.0.0.1:56388 - "GET /auth/verify-token HTTP/1.1" 200 OK
INFO:     127.0.0.1:37794 - "OPTIONS /flows HTTP/1.1" 200 OK
INFO:     127.0.0.1:37794 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 04:33:05,118 - app.main - INFO - 收到请求: GET /flows (来自: 127.0.0.1)
2025-04-22 04:33:05,118 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,119 - app.main - INFO - 请求完成: GET /flows - 307 (耗时: 0.0009s)
INFO:     127.0.0.1:56388 - "GET /flows HTTP/1.1" 307 Temporary Redirect
INFO:     127.0.0.1:37794 - "OPTIONS /flows/ HTTP/1.1" 200 OK
2025-04-22 04:33:05,160 - app.main - INFO - 收到请求: GET /flows/ (来自: 127.0.0.1)
2025-04-22 04:33:05,160 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,169 - app.main - INFO - 请求完成: GET /flows/ - 200 (耗时: 0.0088s)
INFO:     127.0.0.1:56388 - "GET /flows/ HTTP/1.1" 200 OK
2025-04-22 04:33:05,293 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 04:33:05,293 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,301 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:33:05,307 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0135s)
INFO:     127.0.0.1:56404 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 04:33:05,343 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 04:33:05,343 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,351 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:33:05,355 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0113s)
INFO:     127.0.0.1:56404 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
INFO:     127.0.0.1:56406 - "OPTIONS /node-templates/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:56406 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 04:33:05,627 - app.main - INFO - 收到请求: GET /node-templates/ (来自: 127.0.0.1)
2025-04-22 04:33:05,628 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,635 - app.main - INFO - 请求完成: GET /node-templates/ - 200 (耗时: 0.0067s)
INFO:     127.0.0.1:56404 - "GET /node-templates/ HTTP/1.1" 200 OK
2025-04-22 04:33:05,642 - app.main - INFO - 收到请求: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 04:33:05,643 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '16026', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,653 - app.main - INFO - 请求完成: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0106s)
INFO:     127.0.0.1:56388 - "PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 04:33:05,843 - app.main - INFO - 收到请求: GET /node-templates/ (来自: 127.0.0.1)
2025-04-22 04:33:05,844 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:05,850 - app.main - INFO - 请求完成: GET /node-templates/ - 200 (耗时: 0.0057s)
INFO:     127.0.0.1:56388 - "GET /node-templates/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:56422 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 04:33:08,359 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 04:33:08,359 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:08,364 - backend.app.routers.flow - INFO - Attempting to get last valid chat ID for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb for user: 27c83191-caae-4df4-a217-b6398a62061b
2025-04-22 04:33:08,371 - httpcore.connection - DEBUG - close.started
2025-04-22 04:33:08,371 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:33:08,376 - backend.app.routers.flow - INFO - Recorded last chat ID f5585b38-840b-4e29-a94f-7b851319585c is valid for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb.
2025-04-22 04:33:08,376 - backend.app.routers.flow - INFO - Returning last chat ID for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:33:08,376 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 200 (耗时: 0.0169s)
INFO:     127.0.0.1:56388 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
INFO:     127.0.0.1:56422 - "OPTIONS /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 04:33:08,427 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 04:33:08,429 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:08,436 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:33:08,437 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:33:08,438 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:33:08,475 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:33:08,475 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:33:08,475 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:33:08,475 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:33:08,475 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:33:08,477 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0477s)
INFO:     127.0.0.1:56388 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:56430 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 04:33:08,558 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 04:33:08,558 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:08,562 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:33:08,563 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:33:08,563 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:33:08,608 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:33:08,608 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:33:08,608 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:33:08,608 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:33:08,609 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:33:08,610 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0515s)
INFO:     127.0.0.1:56388 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 04:33:08,655 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 04:33:08,655 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:08,659 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:33:08,660 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:33:08,661 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:33:08,699 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:33:08,700 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:33:08,700 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:33:08,700 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:33:08,700 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:33:08,702 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0462s)
INFO:     127.0.0.1:56404 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
INFO:     127.0.0.1:57448 - "OPTIONS /chats/53e43ec9-ce1e-4f77-8c3d-c559f90ff84c HTTP/1.1" 200 OK
2025-04-22 04:33:17,224 - app.main - INFO - 收到请求: GET /chats/53e43ec9-ce1e-4f77-8c3d-c559f90ff84c (来自: 127.0.0.1)
2025-04-22 04:33:17,224 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:17,228 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:33:17,228 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:33:17,229 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:33:17,269 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:33:17,269 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:33:17,269 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:33:17,269 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:33:17,269 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:33:17,271 - app.main - INFO - 请求完成: GET /chats/53e43ec9-ce1e-4f77-8c3d-c559f90ff84c - 200 (耗时: 0.0461s)
INFO:     127.0.0.1:56414 - "GET /chats/53e43ec9-ce1e-4f77-8c3d-c559f90ff84c HTTP/1.1" 200 OK
2025-04-22 04:33:17,835 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 04:33:17,835 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:33:17,836 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:33:17,836 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:33:17,837 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:33:17,868 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:33:17,868 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:33:17,868 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:33:17,868 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:33:17,868 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:33:17,870 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0346s)
INFO:     127.0.0.1:56414 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
INFO:     127.0.0.1:50606 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 04:39:46,263 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 04:39:46,263 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 04:39:46,268 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:39:46,270 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:39:46,272 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:39:46,332 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:39:46,332 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:39:46,332 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:39:46,332 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:39:46,332 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:39:46,333 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:39:46,333 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 04:39:46,345 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 04:39:46,345 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:39:46,345 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:39:46,345 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:39:46,345 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id']
2025-04-22 04:39:46,345 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:39:46,345 - backend.langchainchat.chains.workflow_chain - INFO - Attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 04:39:46,346 - backend.langchainchat.chains.workflow_chain - ERROR - Failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/langchainchat/chains/workflow_chain.py", line 149, in _acall
    db_memory = DbChatMemory(chat_id=chat_id, db_session=db_session)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 04:39:46,346 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 04:39:46,347 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 04:39:46,347 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 04:39:46,347 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:39:46,347 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 04:39:46,348 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 04:39:46,348 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   ---
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   流程图名称: test1
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   节点数量: 28
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   连接数量: 0
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   ---
2025-04-22 04:39:46,348 - backend.deepseek - INFO -   
2025-04-22 04:39:46,348 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 04:39:46,349 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 04:39:46,349 - backend.deepseek - INFO -   
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:39:46,349 - backend.deepseek - INFO - JSON模式: False
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 流式响应: False
2025-04-22 04:39:46,349 - backend.deepseek - INFO - ==================================
2025-04-22 04:39:46,349 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 04:39:46,349 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 04:39:46,356 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 04:39:46,356 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:39:46,357 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 04:39:46,472 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec83d14040>
2025-04-22 04:39:46,472 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x75ec84795e40> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 04:39:46,499 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75ec83d2ffa0>
2025-04-22 04:39:46,500 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:39:46,500 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:39:46,500 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:39:46,500 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:39:46,500 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:39:46,648 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:39:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'025e3d8082a7036e37d1020c70a017db'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=u5nzu_LBIlbzDpdi7GvLUCy.YTbz6eve.vu7jBeBIyQ-1745296786-1.0.1.1-PN1nBzUbD.QxTJqYGrltOMUVFI816BW3_IjzQEp0z3H9dFC0bg1JRU9rUoea.E0kVFNcgoDMR96DDWohmai4DfEMZC9R_gj4cbj3jibO3VI; path=/; expires=Tue, 22-Apr-25 05:09:46 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93427073be26d787-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 04:39:46,649 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:39:46,649 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 04:39:57,534 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:39:57,535 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:39:57,535 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:39:57,535 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:39:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '025e3d8082a7036e37d1020c70a017db', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=u5nzu_LBIlbzDpdi7GvLUCy.YTbz6eve.vu7jBeBIyQ-1745296786-1.0.1.1-PN1nBzUbD.QxTJqYGrltOMUVFI816BW3_IjzQEp0z3H9dFC0bg1JRU9rUoea.E0kVFNcgoDMR96DDWohmai4DfEMZC9R_gj4cbj3jibO3VI; path=/; expires=Tue, 22-Apr-25 05:09:46 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '93427073be26d787-NRT', 'content-encoding': 'gzip'})
2025-04-22 04:39:57,535 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:39:57,537 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 208
2025-04-22 04:39:57,537 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 04:39:57,537 - backend.deepseek - INFO - 响应数据:
2025-04-22 04:39:57,537 - backend.deepseek - INFO -   你的系统提示是：  
2025-04-22 04:39:57,537 - backend.deepseek - INFO -   
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   **“你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。”**  
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   当前流程图的上下文信息是：  
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   - 流程图名称: test1  
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   - 节点数量: 28  
2025-04-22 04:39:57,538 - backend.deepseek - INFO -   - 连接数量: 0  
2025-04-22 04:39:57,539 - backend.deepseek - INFO -   
2025-04-22 04:39:57,539 - backend.deepseek - INFO -   如果你有其他问题或需要进一步帮助，请告诉我！
2025-04-22 04:39:57,539 - backend.deepseek - INFO - ==================================
2025-04-22 04:39:57,539 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 04:39:57,539 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 04:39:57,540 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 04:39:57,541 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 04:39:57,541 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 04:39:57,543 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 04:39:57,543 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 04:39:57,543 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 04:39:57,543 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 04:39:57,544 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 04:39:57,544 - backend.deepseek - INFO - 流式响应: True
2025-04-22 04:39:57,544 - backend.deepseek - INFO - ==================================
2025-04-22 04:39:57,544 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 04:39:57,544 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 04:39:57,556 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\n节点数量: 28\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 04:39:57,557 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 04:39:57,557 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 04:39:57,557 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 04:39:57,557 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 04:39:57,557 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 04:39:57,557 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 04:39:57,716 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 04:39:57 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'22b3c209ac1a602b075d926a55245f45'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'934270b8dcc5d787-NRT')])
2025-04-22 04:39:57,717 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 04:39:57,717 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 04:39:57 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '22b3c209ac1a602b075d926a55245f45', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '934270b8dcc5d787-NRT'})
2025-04-22 04:39:57,717 - openai._base_client - DEBUG - request_id: None
2025-04-22 04:39:57,718 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1
节点数量: 28
连接数量: 0
---

消息 2 (user):
我的系统提示是什么


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
你的系统提示是：  

**“你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。”**  

当前流程图的上下文信息是：  
- 流程图名称: test1  
- 节点数量: 28  
- 连接数量: 0  

如果你有其他问题或需要进一步帮助，请告诉我！
========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

根据2025-04-22 04:40:01,036 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 14.7721s)
INFO:     127.0.0.1:50606 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
当前的流程图上下文信息，您的系统提示如下：

**当前流程图状态：**
- 流程图名称：test1
- 节点数量：28个
- 连接数量：0（尚未建立任何节点间的连线）

您可以通过以下方式进一步操作：
1. **添加/修改节点**：调整现有28个节点的内容或属性
2. **创建连接**：为节点之间添加逻辑连线（当前为0条）
3. **重命名/导出**：修改流程图名称或导出文件
4. **查询细节**：获取特定节点的详细信息

需要我为您执行哪项操作？2025-04-22 04:40:07,319 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 04:40:07,321 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 04:40:07,321 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 04:40:07,322 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 04:40:07,323 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 04:40:07,325 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 04:40:07,325 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 04:40:07,325 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 04:40:07,326 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 04:40:07,326 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 04:40:07,362 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 04:40:07,362 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 04:40:07,362 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 04:40:07,362 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 04:40:07,362 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 04:40:07,362 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 04:40:07,362 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 04:40:07,372 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 04:40:07,372 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 04:40:07,372 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 04:40:07,372 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.
WARNING:  WatchFiles detected changes in 'backend/app/services/chat_service.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1375256]


2025-04-22 04:50:14,385 - httpcore.connection - DEBUG - close.started
2025-04-22 04:50:14,385 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:50:14,386 - httpcore.connection - DEBUG - close.started
2025-04-22 04:50:14,386 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:50:14,386 - httpcore.connection - DEBUG - close.started
2025-04-22 04:50:14,386 - httpcore.connection - DEBUG - close.complete
2025-04-22 04:50:15,020 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 04:50:15,020 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 04:50:15,020 - app.main - INFO - 开始导入模块...
2025-04-22 04:50:15,020 - app.main - INFO - 导入database成功
2025-04-22 04:50:15,020 - app.main - INFO - 导入models成功
2025-04-22 04:50:15,020 - app.main - INFO - 导入config成功
2025-04-22 04:50:15,056 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 04:50:15,056 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 04:50:15,056 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 04:50:15,057 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 04:50:15 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:50:15,404 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 04:50:15 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:50:15,405 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 04:50:15,658 - app.main - INFO - 导入基本路由成功
2025-04-22 04:50:15,658 - app.main - INFO - 导入workflow_router成功
2025-04-22 04:50:15,658 - app.main - INFO - 导入utils成功
2025-04-22 04:50:15,658 - app.main - INFO - 导入dependencies成功
2025-04-22 04:50:15,658 - app.main - INFO - 创建数据库表...
2025-04-22 04:50:15,659 - app.main - INFO - 数据库表创建成功
2025-04-22 04:50:15,659 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 04:50:15,665 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 04:50:15,666 - app.main - INFO - 注册路由...
2025-04-22 04:50:15,670 - app.main - INFO - 注册user路由成功
2025-04-22 04:50:15,675 - app.main - INFO - 注册flow路由成功
2025-04-22 04:50:15,676 - app.main - INFO - 注册email路由成功
2025-04-22 04:50:15,676 - app.main - INFO - 注册auth路由成功
2025-04-22 04:50:15,677 - app.main - INFO - 注册node_templates路由成功
2025-04-22 04:50:15,677 - app.main - INFO - 注册workflow路由成功
2025-04-22 04:50:15,685 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 04:50:15,685 - app.main - INFO - 注册chat路由成功
2025-04-22 04:50:15,685 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1378906]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 04:50:15,691 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 04:50:15,691 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 04:50:15,691 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 04:50:15,691 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 04:50:15,691 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 04:50:15,691 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 04:50:15,691 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 04:50:15,691 - backend.app.startup - INFO - API前缀: /api
2025-04-22 04:50:15,691 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1378906]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 05:55:39,597 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 05:55:39,597 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 05:55:39,597 - app.main - INFO - 开始导入模块...
2025-04-22 05:55:39,597 - app.main - INFO - 导入database成功
2025-04-22 05:55:39,597 - app.main - INFO - 导入models成功
2025-04-22 05:55:39,597 - app.main - INFO - 导入config成功
2025-04-22 05:55:39,634 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 05:55:39,634 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 05:55:39,634 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 05:55:39,635 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 05:55:39 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 05:55:39,953 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 05:55:39 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 05:55:39,953 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 05:55:40,206 - app.main - INFO - 导入基本路由成功
2025-04-22 05:55:40,207 - app.main - INFO - 导入workflow_router成功
2025-04-22 05:55:40,207 - app.main - INFO - 导入utils成功
2025-04-22 05:55:40,207 - app.main - INFO - 导入dependencies成功
2025-04-22 05:55:40,207 - app.main - INFO - 创建数据库表...
2025-04-22 05:55:40,207 - app.main - INFO - 数据库表创建成功
2025-04-22 05:55:40,207 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 05:55:40,215 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 05:55:40,215 - app.main - INFO - 注册路由...
2025-04-22 05:55:40,221 - app.main - INFO - 注册user路由成功
2025-04-22 05:55:40,227 - app.main - INFO - 注册flow路由成功
2025-04-22 05:55:40,228 - app.main - INFO - 注册email路由成功
2025-04-22 05:55:40,229 - app.main - INFO - 注册auth路由成功
2025-04-22 05:55:40,229 - app.main - INFO - 注册node_templates路由成功
2025-04-22 05:55:40,229 - app.main - INFO - 注册workflow路由成功
2025-04-22 05:55:40,238 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 05:55:40,238 - app.main - INFO - 注册chat路由成功
2025-04-22 05:55:40,238 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1386664]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 05:55:40,245 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 05:55:40,245 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 05:55:40,245 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 05:55:40,245 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 05:55:40,245 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 05:55:40,245 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 05:55:40,245 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 05:55:40,245 - backend.app.startup - INFO - API前缀: /api
2025-04-22 05:55:40,245 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/app/services/chat_service.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1386664]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 05:56:01,191 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 05:56:01,191 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 05:56:01,191 - app.main - INFO - 开始导入模块...
2025-04-22 05:56:01,191 - app.main - INFO - 导入database成功
2025-04-22 05:56:01,191 - app.main - INFO - 导入models成功
2025-04-22 05:56:01,191 - app.main - INFO - 导入config成功
2025-04-22 05:56:01,231 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 05:56:01,231 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 05:56:01,231 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 05:56:01,233 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 05:56:01 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 05:56:01,551 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 05:56:01 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 05:56:01,551 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 05:56:01,818 - app.main - INFO - 导入基本路由成功
2025-04-22 05:56:01,819 - app.main - INFO - 导入workflow_router成功
2025-04-22 05:56:01,819 - app.main - INFO - 导入utils成功
2025-04-22 05:56:01,819 - app.main - INFO - 导入dependencies成功
2025-04-22 05:56:01,819 - app.main - INFO - 创建数据库表...
2025-04-22 05:56:01,819 - app.main - INFO - 数据库表创建成功
2025-04-22 05:56:01,819 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 05:56:01,825 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 05:56:01,826 - app.main - INFO - 注册路由...
2025-04-22 05:56:01,830 - app.main - INFO - 注册user路由成功
2025-04-22 05:56:01,835 - app.main - INFO - 注册flow路由成功
2025-04-22 05:56:01,836 - app.main - INFO - 注册email路由成功
2025-04-22 05:56:01,836 - app.main - INFO - 注册auth路由成功
2025-04-22 05:56:01,837 - app.main - INFO - 注册node_templates路由成功
2025-04-22 05:56:01,837 - app.main - INFO - 注册workflow路由成功
2025-04-22 05:56:01,845 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 05:56:01,845 - app.main - INFO - 注册chat路由成功
2025-04-22 05:56:01,845 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1386776]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 05:56:01,850 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 05:56:01,850 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 05:56:01,850 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 05:56:01,850 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 05:56:01,850 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 05:56:01,850 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 05:56:01,850 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 05:56:01,850 - backend.app.startup - INFO - API前缀: /api
2025-04-22 05:56:01,850 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
INFO:     127.0.0.1:44862 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 05:56:54,472 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 05:56:54,473 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '49', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 05:56:54,482 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 05:56:54,483 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 05:56:54,483 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 05:56:54,522 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 05:56:54,523 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 05:56:54,523 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 05:56:54,523 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 05:56:54,523 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 05:56:54,523 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 05:56:54,523 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 05:56:54,525 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 05:56:54,527 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 05:56:54,527 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我们的历史信息...
2025-04-22 05:56:54,539 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 05:56:54,539 - backend.app.services.chat_service - INFO - ChatService attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 05:56:54,539 - backend.app.services.chat_service - ERROR - ChatService failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/app/services/chat_service.py", line 280, in process_chat_message
    db_memory = DbChatMemory(chat_id=chat_id, db_session=self.db)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 05:56:54,540 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 05:56:54,540 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 05:56:54,540 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 05:56:54,540 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 05:56:54,540 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我们的历史信息... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 05:56:54,540 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain received 0 history messages from input.
2025-04-22 05:56:54,540 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 05:56:54,541 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 05:56:54,541 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 05:56:54,541 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 05:56:54,541 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 05:56:54,541 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 05:56:54,541 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 05:56:54,541 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 05:56:54,541 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   ---
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   流程图名称: test1\n节点数量: 28\n连接数量: 0
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   ---
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 05:56:54,542 - backend.deepseek - INFO -   我们的历史信息
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 05:56:54,542 - backend.deepseek - INFO - JSON模式: False
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 流式响应: False
2025-04-22 05:56:54,542 - backend.deepseek - INFO - ==================================
2025-04-22 05:56:54,542 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 05:56:54,542 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 05:56:54,547 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\\n节点数量: 28\\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的历史信息'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 05:56:54,548 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 05:56:54,548 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 05:56:54,637 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x72500d7062f0>
2025-04-22 05:56:54,638 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x72500d9af540> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 05:56:54,666 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x72500d7062c0>
2025-04-22 05:56:54,667 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 05:56:54,668 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 05:56:54,668 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 05:56:54,668 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 05:56:54,668 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 05:56:54,818 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 05:56:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'f14c33eae52d5a8425b565b315c73d74'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ot4Cxxuslmt2QSHkJefLrP1xHV3MOgZ6rXirBkyJpcQ-1745301414-1.0.1.1-ihrYzUcg4eua5BUhXgAtUB7ldTemd9ug5.w3rsz3A85XCxem4B1WvYLPr96XDW42ZFHaV1Cc5P0YES.4zDB8GHocqxLhwSYvgrfl62Qnk6c; path=/; expires=Tue, 22-Apr-25 06:26:54 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9342e171be50d5cf-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 05:56:54,821 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 05:56:54,821 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 05:57:03,777 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 05:57:03,777 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 05:57:03,777 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 05:57:03,778 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 05:56:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'f14c33eae52d5a8425b565b315c73d74', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ot4Cxxuslmt2QSHkJefLrP1xHV3MOgZ6rXirBkyJpcQ-1745301414-1.0.1.1-ihrYzUcg4eua5BUhXgAtUB7ldTemd9ug5.w3rsz3A85XCxem4B1WvYLPr96XDW42ZFHaV1Cc5P0YES.4zDB8GHocqxLhwSYvgrfl62Qnk6c; path=/; expires=Tue, 22-Apr-25 06:26:54 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9342e171be50d5cf-NRT', 'content-encoding': 'gzip'})
2025-04-22 05:57:03,778 - openai._base_client - DEBUG - request_id: None
2025-04-22 05:57:03,791 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 197
2025-04-22 05:57:03,791 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 05:57:03,791 - backend.deepseek - INFO - 响应数据:
2025-04-22 05:57:03,791 - backend.deepseek - INFO -   当前对话的历史信息如下：
2025-04-22 05:57:03,791 - backend.deepseek - INFO -   
2025-04-22 05:57:03,791 - backend.deepseek - INFO -   1. **流程图上下文**：
2025-04-22 05:57:03,791 - backend.deepseek - INFO -      - 流程图名称：`test1`
2025-04-22 05:57:03,791 - backend.deepseek - INFO -      - 节点数量：28
2025-04-22 05:57:03,791 - backend.deepseek - INFO -      - 连接数量：0
2025-04-22 05:57:03,791 - backend.deepseek - INFO -   
2025-04-22 05:57:03,792 - backend.deepseek - INFO -   2. **工具支持**：
2025-04-22 05:57:03,792 - backend.deepseek - INFO -      - 可以创建、修改流程图节点。
2025-04-22 05:57:03,792 - backend.deepseek - INFO -      - 可以连接节点。
2025-04-22 05:57:03,792 - backend.deepseek - INFO -      - 可以设置节点或连接的属性。
2025-04-22 05:57:03,792 - backend.deepseek - INFO -      - 可以询问更多信息以完成任务。
2025-04-22 05:57:03,792 - backend.deepseek - INFO -      - 可以生成文本内容。
2025-04-22 05:57:03,792 - backend.deepseek - INFO -   
2025-04-22 05:57:03,792 - backend.deepseek - INFO -   如果您需要进一步操作或了解其他信息，请告诉我！
2025-04-22 05:57:03,792 - backend.deepseek - INFO - ==================================
2025-04-22 05:57:03,792 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 05:57:03,792 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 05:57:03,792 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 05:57:03,793 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 05:57:03,793 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 05:57:03,793 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 05:57:03,793 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 05:57:03,793 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 05:57:03,793 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 05:57:03,793 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 05:57:03,794 - backend.deepseek - INFO - 流式响应: True
2025-04-22 05:57:03,794 - backend.deepseek - INFO - ==================================
2025-04-22 05:57:03,794 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 05:57:03,794 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 05:57:03,797 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\\n节点数量: 28\\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的历史信息'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 05:57:03,797 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 05:57:03,797 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 05:57:03,798 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 05:57:03,798 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 05:57:03,798 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 05:57:03,798 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 05:57:03,946 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 05:57:03 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'6c4417b638fe1fbd66a98b14d318c3a0'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9342e1aac91bd5cf-NRT')])
2025-04-22 05:57:03,947 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 05:57:03,948 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 05:57:03 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '6c4417b638fe1fbd66a98b14d318c3a0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9342e1aac91bd5cf-NRT'})
2025-04-22 05:57:03,948 - openai._base_client - DEBUG - request_id: None
2025-04-22 05:57:03,949 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1\n节点数量: 28\n连接数量: 0
---

消息 2 (user):
我们的历史信息

工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
当前对话的历史信息如下：

1. **流程图上下文**：
   - 流程图名称：`test1`
   - 节点数量：28
   - 连接数量：0

2. **工具支持**：
   - 可以创建、修改流程图节点。
   - 可以连接节点。
   - 可以设置节点或连接的属性。
   - 可以询问更多信息以完成任务。
   - 可以生成文本内容。

如果您需要进一步操作或了解其他信息，请告诉我！
========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

根据2025-04-22 05:57:07,447 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 12.9736s)
INFO:     127.0.0.1:44862 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
当前的对话历史，我们正在讨论一个名为“test1”的流程图，该流程图目前包含28个节点，但尚未建立任何连接（连接数量为0）。  

如果您需要进一步操作这个流程图（例如添加连接、修改节点、调整布局等），或者有其他相关问题，请告诉我您的具体需求，我会尽力协助您！2025-04-22 05:57:11,975 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 05:57:11,976 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 05:57:11,976 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 05:57:11,976 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 05:57:11,976 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 05:57:11,978 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 05:57:11,979 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 05:57:11,979 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 05:57:11,980 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 05:57:11,982 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 05:57:12,019 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 05:57:12,019 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 05:57:12,019 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 05:57:12,019 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 05:57:12,019 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 05:57:12,019 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 05:57:12,019 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 05:57:12,031 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 05:57:12,031 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 05:57:12,031 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 05:57:12,031 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.


INFO:     127.0.0.1:34734 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 06:13:20,684 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 06:13:20,684 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:13:20,690 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:13:20,690 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:13:20,690 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:13:20,722 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:13:20,722 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:13:20,723 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:13:20,723 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:13:20,723 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:13:20,724 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:13:20,724 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我们的对话历史信息
...
2025-04-22 06:13:20,736 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 06:13:20,736 - backend.app.services.chat_service - INFO - ChatService attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:13:20,737 - backend.app.services.chat_service - ERROR - ChatService failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
Traceback (most recent call last):
  File "/workspace/backend/app/services/chat_service.py", line 280, in process_chat_message
    db_memory = DbChatMemory(chat_id=chat_id, db_session=self.db)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 176, in __init__
    self.__pydantic_validator__.validate_python(data, self_instance=self)
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/_internal/_mock_val_ser.py", line 47, in __getattr__
    raise PydanticUserError(self._error_message, code=self._code)
pydantic.errors.PydanticUserError: `DbChatMemory` is not fully defined; you should define `ChatService`, then call `DbChatMemory.model_rebuild()`.

For further information visit https://errors.pydantic.dev/2.7/u/class-not-fully-defined
2025-04-22 06:13:20,737 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:13:20,737 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我们的对话历史信息
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain received 0 history messages from input.
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 06:13:20,738 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 06:13:20,738 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 06:13:20,739 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   ---
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   流程图名称: test1\n节点数量: 28\n连接数量: 0
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   ---
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   我们的对话历史信息
2025-04-22 06:13:20,739 - backend.deepseek - INFO -   
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 工具定义: [{"type": "function", "function": {"name": "create_node", "description": "创建一个流程图节点", "parameters": {"description": "节点创建参数", "properties": {"node_type": {"title": "Node Type", "type": "string"}, "node_label": {"title": "Node Label", "type": "string"}, "position": {"anyOf": [{"additionalProperties": {"type": "number"}, "type": "object"}, {"type": "null"}], "default": null, "title": "Position"}, "properties": {"anyOf": [{"type": "object"}, {"type": "null"}], "default": null, "title": "Properties"}}, "required": ["node_type", "node_label"], "title": "NodeParams", "type": "object"}}}, {"type": "function", "function": {"name": "connect_nodes", "description": "连接两个流程图节点", "parameters": {"description": "节点连接参数", "properties": {"source_id": {"title": "Source Id", "type": "string"}, "target_id": {"title": "Target Id", "type": "string"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Label"}}, "required": ["source_id", "target_id"], "title": "ConnectionParams", "type": "object"}}}, {"type": "function", "function": {"name": "set_properties", "description": "设置节点或连接的属性", "parameters": {"description": "属性设置参数", "properties": {"element_id": {"title": "Element Id", "type": "string"}, "properties": {"type": "object", "title": "Properties"}}, "required": ["element_id", "properties"], "title": "PropertyParams", "type": "object"}}}, {"type": "function", "function": {"name": "ask_more_info", "description": "当信息不足时，向用户询问更多问题", "parameters": {"description": "追加问题参数", "properties": {"questions": {"items": {"type": "string"}, "title": "Questions", "type": "array"}, "context": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "title": "Context"}}, "required": ["questions"], "title": "QuestionsParams", "type": "object"}}}, {"type": "function", "function": {"name": "generate_text", "description": "根据提示生成文本内容", "parameters": {"description": "文本生成参数", "properties": {"prompt": {"title": "Prompt", "type": "string"}, "max_length": {"default": 500, "title": "Max Length", "type": "integer"}}, "required": ["prompt"], "title": "TextGenerationParams", "type": "object"}}}]
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 06:13:20,739 - backend.deepseek - INFO - JSON模式: False
2025-04-22 06:13:20,739 - backend.deepseek - INFO - 流式响应: False
2025-04-22 06:13:20,739 - backend.deepseek - INFO - ==================================
2025-04-22 06:13:20,739 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=5
2025-04-22 06:13:20,740 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 06:13:20,745 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\\n节点数量: 28\\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的对话历史信息\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3, 'tools': [{'type': 'function', 'function': {'name': 'create_node', 'description': '创建一个流程图节点', 'parameters': {'description': '节点创建参数', 'properties': {'node_type': {'title': 'Node Type', 'type': 'string'}, 'node_label': {'title': 'Node Label', 'type': 'string'}, 'position': {'anyOf': [{'additionalProperties': {'type': 'number'}, 'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Position'}, 'properties': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Properties'}}, 'required': ['node_type', 'node_label'], 'title': 'NodeParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'connect_nodes', 'description': '连接两个流程图节点', 'parameters': {'description': '节点连接参数', 'properties': {'source_id': {'title': 'Source Id', 'type': 'string'}, 'target_id': {'title': 'Target Id', 'type': 'string'}, 'label': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Label'}}, 'required': ['source_id', 'target_id'], 'title': 'ConnectionParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'set_properties', 'description': '设置节点或连接的属性', 'parameters': {'description': '属性设置参数', 'properties': {'element_id': {'title': 'Element Id', 'type': 'string'}, 'properties': {'type': 'object', 'title': 'Properties'}}, 'required': ['element_id', 'properties'], 'title': 'PropertyParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'ask_more_info', 'description': '当信息不足时，向用户询问更多问题', 'parameters': {'description': '追加问题参数', 'properties': {'questions': {'items': {'type': 'string'}, 'title': 'Questions', 'type': 'array'}, 'context': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['questions'], 'title': 'QuestionsParams', 'type': 'object'}}}, {'type': 'function', 'function': {'name': 'generate_text', 'description': '根据提示生成文本内容', 'parameters': {'description': '文本生成参数', 'properties': {'prompt': {'title': 'Prompt', 'type': 'string'}, 'max_length': {'default': 500, 'title': 'Max Length', 'type': 'integer'}}, 'required': ['prompt'], 'title': 'TextGenerationParams', 'type': 'object'}}}]}}
2025-04-22 06:13:20,746 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 06:13:20,747 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 06:13:20,861 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x72500d707250>
2025-04-22 06:13:20,862 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x72500d8ec640> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 06:13:20,890 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x72500d707130>
2025-04-22 06:13:20,891 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 06:13:20,891 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 06:13:20,891 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 06:13:20,892 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 06:13:20,892 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 06:13:21,153 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 06:13:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'eac364e17aded6e498611cc33d4e1063'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=7cpR6nZ2QwN6lADUS3tbeyTcoVnL91Y2EqEMcqdrMRk-1745302401-1.0.1.1-H4uhsghc.7BZUSyrBmI2wsueIKYU5pPBHDiUewxjjuUGuMh2IicgMjrQO03TL1XkYTCTzkKixr2Lyu2NRJBAtyD5CFVbMHUzsOSoVHkMMr0; path=/; expires=Tue, 22-Apr-25 06:43:21 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9342f985a8c2d761-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 06:13:21,154 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 06:13:21,155 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 06:13:31,851 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 06:13:31,851 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 06:13:31,852 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 06:13:31,852 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 06:13:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'eac364e17aded6e498611cc33d4e1063', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=7cpR6nZ2QwN6lADUS3tbeyTcoVnL91Y2EqEMcqdrMRk-1745302401-1.0.1.1-H4uhsghc.7BZUSyrBmI2wsueIKYU5pPBHDiUewxjjuUGuMh2IicgMjrQO03TL1XkYTCTzkKixr2Lyu2NRJBAtyD5CFVbMHUzsOSoVHkMMr0; path=/; expires=Tue, 22-Apr-25 06:43:21 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '9342f985a8c2d761-NRT', 'content-encoding': 'gzip'})
2025-04-22 06:13:31,852 - openai._base_client - DEBUG - request_id: None
2025-04-22 06:13:31,854 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 261
2025-04-22 06:13:31,854 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 06:13:31,854 - backend.deepseek - INFO - 响应数据:
2025-04-22 06:13:31,855 - backend.deepseek - INFO -   当前的对话历史信息如下：
2025-04-22 06:13:31,855 - backend.deepseek - INFO -   
2025-04-22 06:13:31,855 - backend.deepseek - INFO -   1. **流程图上下文**：
2025-04-22 06:13:31,855 - backend.deepseek - INFO -      - 流程图名称：`test1`
2025-04-22 06:13:31,855 - backend.deepseek - INFO -      - 节点数量：28
2025-04-22 06:13:31,856 - backend.deepseek - INFO -      - 连接数量：0
2025-04-22 06:13:31,856 - backend.deepseek - INFO -   
2025-04-22 06:13:31,856 - backend.deepseek - INFO -   2. **工具支持**：
2025-04-22 06:13:31,856 - backend.deepseek - INFO -      - 可以创建、修改流程图节点。
2025-04-22 06:13:31,856 - backend.deepseek - INFO -      - 可以连接节点。
2025-04-22 06:13:31,857 - backend.deepseek - INFO -      - 可以设置节点或连接的属性。
2025-04-22 06:13:31,857 - backend.deepseek - INFO -      - 可以询问更多信息以完成任务。
2025-04-22 06:13:31,857 - backend.deepseek - INFO -      - 可以生成文本内容。
2025-04-22 06:13:31,857 - backend.deepseek - INFO -   
2025-04-22 06:13:31,857 - backend.deepseek - INFO -   3. **当前状态**：
2025-04-22 06:13:31,858 - backend.deepseek - INFO -      - 尚未执行任何操作（如创建节点、连接节点等）。
2025-04-22 06:13:31,858 - backend.deepseek - INFO -      - 流程图中有28个节点，但未连接。
2025-04-22 06:13:31,858 - backend.deepseek - INFO -   
2025-04-22 06:13:31,858 - backend.deepseek - INFO -   如果你需要进一步操作或了解其他信息，请告诉我！
2025-04-22 06:13:31,858 - backend.deepseek - INFO - ==================================
2025-04-22 06:13:31,859 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 06:13:31,859 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 06:13:31,860 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 06:13:31,860 - backend.app.services.chat_service - INFO - WorkflowChain returned a stream generator for chat f5585b38-840b-4e29-a94f-7b851319585c. Returning it directly.
2025-04-22 06:13:31,860 - backend.app.routers.chat - INFO - Chat service returned stream for chat f5585b38-840b-4e29-a94f-7b851319585c. Preparing StreamingResponse with background save.
2025-04-22 06:13:31,862 - backend.deepseek - DEBUG - Executing streaming chat completion...
2025-04-22 06:13:31,863 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (流式) =====
2025-04-22 06:13:31,863 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 06:13:31,864 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 06:13:31,864 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 06:13:31,864 - backend.deepseek - INFO - 流式响应: True
2025-04-22 06:13:31,864 - backend.deepseek - INFO - ==================================
2025-04-22 06:13:31,864 - backend.deepseek - DEBUG - 调用DeepSeek API (流式): 模型=deepseek-chat, 温度=0.3
2025-04-22 06:13:31,865 - backend.deepseek - INFO - 开始流式API调用
2025-04-22 06:13:31,876 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\\n节点数量: 28\\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我们的对话历史信息\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': True, 'temperature': 0.3}}
2025-04-22 06:13:31,877 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 06:13:31,877 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 06:13:31,877 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 06:13:31,877 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 06:13:31,877 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 06:13:31,878 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 06:13:32,028 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 06:13:32 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'cache-control', b'no-cache'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'285dec884960b65288e106a2b2db0b54'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9342f9ca58bfd761-NRT')])
2025-04-22 06:13:32,029 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 06:13:32,030 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 06:13:32 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'cache-control': 'no-cache', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '285dec884960b65288e106a2b2db0b54', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '9342f9ca58bfd761-NRT'})
2025-04-22 06:13:32,030 - openai._base_client - DEBUG - request_id: None
2025-04-22 06:13:32,031 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1\n节点数量: 28\n连接数量: 0
---

消息 2 (user):
我们的对话历史信息


工具定义: [
  {
    "type": "function",
    "function": {
      "name": "create_node",
      "description": "创建一个流程图节点",
      "parameters": {
        "description": "节点创建参数",
        "properties": {
          "node_type": {
            "title": "Node Type",
            "type": "string"
          },
          "node_label": {
            "title": "Node Label",
            "type": "string"
          },
          "position": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Position"
          },
          "properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Properties"
          }
        },
        "required": [
          "node_type",
          "node_label"
        ],
        "title": "NodeParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "connect_nodes",
      "description": "连接两个流程图节点",
      "parameters": {
        "description": "节点连接参数",
        "properties": {
          "source_id": {
            "title": "Source Id",
            "type": "string"
          },
          "target_id": {
            "title": "Target Id",
            "type": "string"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Label"
          }
        },
        "required": [
          "source_id",
          "target_id"
        ],
        "title": "ConnectionParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "set_properties",
      "description": "设置节点或连接的属性",
      "parameters": {
        "description": "属性设置参数",
        "properties": {
          "element_id": {
            "title": "Element Id",
            "type": "string"
          },
          "properties": {
            "type": "object",
            "title": "Properties"
          }
        },
        "required": [
          "element_id",
          "properties"
        ],
        "title": "PropertyParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "ask_more_info",
      "description": "当信息不足时，向用户询问更多问题",
      "parameters": {
        "description": "追加问题参数",
        "properties": {
          "questions": {
            "items": {
              "type": "string"
            },
            "title": "Questions",
            "type": "array"
          },
          "context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Context"
          }
        },
        "required": [
          "questions"
        ],
        "title": "QuestionsParams",
        "type": "object"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "generate_text",
      "description": "根据提示生成文本内容",
      "parameters": {
        "description": "文本生成参数",
        "properties": {
          "prompt": {
            "title": "Prompt",
            "type": "string"
          },
          "max_length": {
            "default": 500,
            "title": "Max Length",
            "type": "integer"
          }
        },
        "required": [
          "prompt"
        ],
        "title": "TextGenerationParams",
        "type": "object"
      }
    }
  }
]

模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
当前的对话历史信息如下：

1. **流程图上下文**：
   - 流程图名称：`test1`
   - 节点数量：28
   - 连接数量：0

2. **工具支持**：
   - 可以创建、修改流程图节点。
   - 可以连接节点。
   - 可以设置节点或连接的属性。
   - 可以询问更多信息以完成任务。
   - 可以生成文本内容。

3. **当前状态**：
   - 尚未执行任何操作（如创建节点、连接节点等）。
   - 流程图中有28个节点，但未连接。

如果你需要进一步操作或了解其他信息，请告诉我！
========================================


======== DEEPSEEK API 请求 (流式) ========
消息数量: 2
模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
流式响应: True
======================================

目前2025-04-22 06:13:35,920 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 200 (耗时: 15.2355s)
INFO:     127.0.0.1:34734 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
我们的对话历史信息如下：

1. 当前流程图上下文：
   - 流程图名称：test1
   - 节点数量：28
   - 连接数量：0

2. 您刚刚询问了关于对话历史信息的问题。

如果您需要我基于这个流程图上下文执行任何操作（如添加/修改节点、创建连接等），或者有其他关于流程图的问题，请随时告诉我。2025-04-22 06:13:40,391 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 06:13:40,392 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 06:13:40,392 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 06:13:40,392 - backend.deepseek - INFO - 流式API调用正常结束
2025-04-22 06:13:40,393 - backend.app.routers.chat - INFO - Stream finished or terminated for chat f5585b38-840b-4e29-a94f-7b851319585c. Adding background task to save content.
2025-04-22 06:13:40,395 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Started: Save message.
2025-04-22 06:13:40,395 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Created new DB session.
2025-04-22 06:13:40,395 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:13:40,396 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:13:40,397 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:13:40,443 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:13:40,443 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:13:40,443 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:13:40,443 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:13:40,443 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:13:40,443 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Instantiated ChatService with new session.
2025-04-22 06:13:40,443 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Calling add_message_to_chat...
2025-04-22 06:13:40,455 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 06:13:40,455 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Success: Saved message.
2025-04-22 06:13:40,455 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Closed DB session.
2025-04-22 06:13:40,455 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] Finished.
WARNING:  WatchFiles detected changes in 'backend/app/main.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1386776]


2025-04-22 06:17:50,209 - httpcore.connection - DEBUG - close.started
2025-04-22 06:17:50,210 - httpcore.connection - DEBUG - close.complete
2025-04-22 06:17:50,210 - httpcore.connection - DEBUG - close.started
2025-04-22 06:17:50,210 - httpcore.connection - DEBUG - close.complete
2025-04-22 06:17:50,908 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:17:50,908 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:17:50,908 - app.main - INFO - 开始导入模块...
2025-04-22 06:17:50,908 - app.main - INFO - 导入database成功
2025-04-22 06:17:50,908 - app.main - INFO - 导入models成功
2025-04-22 06:17:50,908 - app.main - INFO - 导入config成功
2025-04-22 06:17:50,945 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:17:50,945 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:17:50,945 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:17:50,946 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:17:51 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:17:51,248 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:17:51 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:17:51,249 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:17:51,515 - app.main - INFO - 导入基本路由成功
2025-04-22 06:17:51,516 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:17:51,516 - app.main - INFO - 导入utils成功
2025-04-22 06:17:51,516 - app.main - INFO - 导入dependencies成功
2025-04-22 06:17:51,516 - app.main - INFO - 创建数据库表...
2025-04-22 06:17:51,516 - app.main - INFO - 数据库表创建成功
2025-04-22 06:17:51,516 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:17:51,518 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:17:51,518 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:17:51,524 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:17:51,524 - app.main - INFO - 注册路由...
2025-04-22 06:17:51,529 - app.main - INFO - 注册user路由成功
2025-04-22 06:17:51,533 - app.main - INFO - 注册flow路由成功
2025-04-22 06:17:51,534 - app.main - INFO - 注册email路由成功
2025-04-22 06:17:51,534 - app.main - INFO - 注册auth路由成功
2025-04-22 06:17:51,535 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:17:51,535 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:17:51,543 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:17:51,543 - app.main - INFO - 注册chat路由成功
2025-04-22 06:17:51,543 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1389721]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:17:51,548 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:17:51,548 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:17:51,548 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:17:51,548 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:17:51,548 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:17:51,548 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:17:51,548 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:17:51,548 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:17:51,548 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1389721]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:18:43,450 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:18:43,450 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:18:43,451 - app.main - INFO - 开始导入模块...
2025-04-22 06:18:43,451 - app.main - INFO - 导入database成功
2025-04-22 06:18:43,451 - app.main - INFO - 导入models成功
2025-04-22 06:18:43,451 - app.main - INFO - 导入config成功
2025-04-22 06:18:43,487 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:18:43,487 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:18:43,487 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:18:43,488 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:18:43 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:18:43,795 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:18:43 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:18:43,795 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:18:44,053 - app.main - INFO - 导入基本路由成功
2025-04-22 06:18:44,053 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:18:44,053 - app.main - INFO - 导入utils成功
2025-04-22 06:18:44,053 - app.main - INFO - 导入dependencies成功
2025-04-22 06:18:44,053 - app.main - INFO - 创建数据库表...
2025-04-22 06:18:44,053 - app.main - INFO - 数据库表创建成功
2025-04-22 06:18:44,054 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:18:44,055 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:18:44,056 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:18:44,062 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:18:44,063 - app.main - INFO - 注册路由...
2025-04-22 06:18:44,068 - app.main - INFO - 注册user路由成功
2025-04-22 06:18:44,073 - app.main - INFO - 注册flow路由成功
2025-04-22 06:18:44,074 - app.main - INFO - 注册email路由成功
2025-04-22 06:18:44,074 - app.main - INFO - 注册auth路由成功
2025-04-22 06:18:44,075 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:18:44,075 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:18:44,083 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:18:44,083 - app.main - INFO - 注册chat路由成功
2025-04-22 06:18:44,083 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1389854]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:18:44,089 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:18:44,089 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:18:44,089 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:18:44,089 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:18:44,089 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:18:44,089 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:18:44,089 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:18:44,089 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:18:44,089 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1389854]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:20:08,716 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:20:08,716 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:20:08,716 - app.main - INFO - 开始导入模块...
2025-04-22 06:20:08,716 - app.main - INFO - 导入database成功
2025-04-22 06:20:08,716 - app.main - INFO - 导入models成功
2025-04-22 06:20:08,716 - app.main - INFO - 导入config成功
2025-04-22 06:20:08,755 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:20:08,755 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:20:08,755 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:20:08,756 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:20:09 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:09,062 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:09 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:09,062 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:09,334 - app.main - INFO - 导入基本路由成功
2025-04-22 06:20:09,334 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:20:09,334 - app.main - INFO - 导入utils成功
2025-04-22 06:20:09,334 - app.main - INFO - 导入dependencies成功
2025-04-22 06:20:09,334 - app.main - INFO - 创建数据库表...
2025-04-22 06:20:09,334 - app.main - INFO - 数据库表创建成功
2025-04-22 06:20:09,334 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:20:09,336 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:20:09,336 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:20:09,343 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:20:09,343 - app.main - INFO - 注册路由...
2025-04-22 06:20:09,348 - app.main - INFO - 注册user路由成功
2025-04-22 06:20:09,352 - app.main - INFO - 注册flow路由成功
2025-04-22 06:20:09,353 - app.main - INFO - 注册email路由成功
2025-04-22 06:20:09,353 - app.main - INFO - 注册auth路由成功
2025-04-22 06:20:09,354 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:20:09,354 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:20:09,362 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:20:09,362 - app.main - INFO - 注册chat路由成功
2025-04-22 06:20:09,362 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1390068]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:20:09,367 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:20:09,367 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:20:09,367 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:20:09,367 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:20:09,367 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:20:09,367 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:20:09,367 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:20:09,367 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:20:09,367 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1390068]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:20:17,125 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:20:17,125 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:20:17,125 - app.main - INFO - 开始导入模块...
2025-04-22 06:20:17,125 - app.main - INFO - 导入database成功
2025-04-22 06:20:17,125 - app.main - INFO - 导入models成功
2025-04-22 06:20:17,125 - app.main - INFO - 导入config成功
2025-04-22 06:20:17,161 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:20:17,161 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:20:17,161 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:20:17,163 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:20:17 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:17,473 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:17 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:17,473 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:17,726 - app.main - INFO - 导入基本路由成功
2025-04-22 06:20:17,726 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:20:17,726 - app.main - INFO - 导入utils成功
2025-04-22 06:20:17,726 - app.main - INFO - 导入dependencies成功
2025-04-22 06:20:17,726 - app.main - INFO - 创建数据库表...
2025-04-22 06:20:17,727 - app.main - INFO - 数据库表创建成功
2025-04-22 06:20:17,727 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:20:17,729 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:20:17,729 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:20:17,736 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:20:17,736 - app.main - INFO - 注册路由...
2025-04-22 06:20:17,741 - app.main - INFO - 注册user路由成功
2025-04-22 06:20:17,747 - app.main - INFO - 注册flow路由成功
2025-04-22 06:20:17,747 - app.main - INFO - 注册email路由成功
2025-04-22 06:20:17,748 - app.main - INFO - 注册auth路由成功
2025-04-22 06:20:17,748 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:20:17,748 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:20:17,756 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:20:17,756 - app.main - INFO - 注册chat路由成功
2025-04-22 06:20:17,756 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1390108]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:20:17,762 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:20:17,763 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:20:17,763 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:20:17,763 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:20:17,763 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:20:17,763 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:20:17,763 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:20:17,763 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:20:17,763 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1390108]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:20:29,016 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:20:29,016 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:20:29,016 - app.main - INFO - 开始导入模块...
2025-04-22 06:20:29,016 - app.main - INFO - 导入database成功
2025-04-22 06:20:29,016 - app.main - INFO - 导入models成功
2025-04-22 06:20:29,016 - app.main - INFO - 导入config成功
2025-04-22 06:20:29,052 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:20:29,052 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:20:29,053 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:20:29,054 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:20:29 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:29,369 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:29 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:29,369 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:29,619 - app.main - INFO - 导入基本路由成功
2025-04-22 06:20:29,619 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:20:29,619 - app.main - INFO - 导入utils成功
2025-04-22 06:20:29,619 - app.main - INFO - 导入dependencies成功
2025-04-22 06:20:29,619 - app.main - INFO - 创建数据库表...
2025-04-22 06:20:29,620 - app.main - INFO - 数据库表创建成功
2025-04-22 06:20:29,620 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:20:29,621 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:20:29,621 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:20:29,627 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:20:29,628 - app.main - INFO - 注册路由...
2025-04-22 06:20:29,632 - app.main - INFO - 注册user路由成功
2025-04-22 06:20:29,637 - app.main - INFO - 注册flow路由成功
2025-04-22 06:20:29,637 - app.main - INFO - 注册email路由成功
2025-04-22 06:20:29,638 - app.main - INFO - 注册auth路由成功
2025-04-22 06:20:29,638 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:20:29,638 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:20:29,646 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:20:29,646 - app.main - INFO - 注册chat路由成功
2025-04-22 06:20:29,646 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1390173]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:20:29,652 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:20:29,652 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:20:29,652 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:20:29,652 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:20:29,652 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:20:29,652 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:20:29,652 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:20:29,652 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:20:29,652 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/langchainchat/chains/workflow_chain.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1390173]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:20:50,449 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:20:50,449 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:20:50,449 - app.main - INFO - 开始导入模块...
2025-04-22 06:20:50,449 - app.main - INFO - 导入database成功
2025-04-22 06:20:50,449 - app.main - INFO - 导入models成功
2025-04-22 06:20:50,449 - app.main - INFO - 导入config成功
2025-04-22 06:20:50,486 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:20:50,486 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:20:50,486 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:20:50,487 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:20:50 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:50,800 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:20:50 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:50,800 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:20:51,055 - app.main - INFO - 导入基本路由成功
2025-04-22 06:20:51,055 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:20:51,055 - app.main - INFO - 导入utils成功
2025-04-22 06:20:51,055 - app.main - INFO - 导入dependencies成功
2025-04-22 06:20:51,055 - app.main - INFO - 创建数据库表...
2025-04-22 06:20:51,055 - app.main - INFO - 数据库表创建成功
2025-04-22 06:20:51,056 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:20:51,057 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:20:51,057 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:20:51,063 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:20:51,063 - app.main - INFO - 注册路由...
2025-04-22 06:20:51,068 - app.main - INFO - 注册user路由成功
2025-04-22 06:20:51,073 - app.main - INFO - 注册flow路由成功
2025-04-22 06:20:51,074 - app.main - INFO - 注册email路由成功
2025-04-22 06:20:51,074 - app.main - INFO - 注册auth路由成功
2025-04-22 06:20:51,074 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:20:51,074 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:20:51,082 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:20:51,083 - app.main - INFO - 注册chat路由成功
2025-04-22 06:20:51,083 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1390237]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:20:51,088 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:20:51,088 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:20:51,088 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:20:51,088 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:20:51,088 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:20:51,088 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:20:51,088 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:20:51,088 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:20:51,088 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/app/routers/chat.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1390237]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:22:38,489 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:22:38,489 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:22:38,489 - app.main - INFO - 开始导入模块...
2025-04-22 06:22:38,489 - app.main - INFO - 导入database成功
2025-04-22 06:22:38,489 - app.main - INFO - 导入models成功
2025-04-22 06:22:38,489 - app.main - INFO - 导入config成功
2025-04-22 06:22:38,525 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:22:38,525 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:22:38,525 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:22:38,526 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:22:38 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:22:38,851 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:22:38 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:22:38,851 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:22:39,102 - app.main - INFO - 导入基本路由成功
2025-04-22 06:22:39,102 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:22:39,102 - app.main - INFO - 导入utils成功
2025-04-22 06:22:39,102 - app.main - INFO - 导入dependencies成功
2025-04-22 06:22:39,102 - app.main - INFO - 创建数据库表...
2025-04-22 06:22:39,102 - app.main - INFO - 数据库表创建成功
2025-04-22 06:22:39,102 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:22:39,104 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:22:39,104 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:22:39,111 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:22:39,111 - app.main - INFO - 注册路由...
2025-04-22 06:22:39,116 - app.main - INFO - 注册user路由成功
2025-04-22 06:22:39,120 - app.main - INFO - 注册flow路由成功
2025-04-22 06:22:39,121 - app.main - INFO - 注册email路由成功
2025-04-22 06:22:39,122 - app.main - INFO - 注册auth路由成功
2025-04-22 06:22:39,122 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:22:39,122 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:22:39,130 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:22:39,130 - app.main - INFO - 注册chat路由成功
2025-04-22 06:22:39,130 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1390487]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:22:39,137 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:22:39,137 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:22:39,137 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:22:39,138 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:22:39,138 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:22:39,138 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:22:39,138 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:22:39,138 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:22:39,138 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
WARNING:  WatchFiles detected changes in 'backend/app/routers/chat.py'. Reloading...
INFO:     Shutting down
INFO:     Waiting for application shutdown.
INFO:     Application shutdown complete.
INFO:     Finished server process [1390487]
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
2025-04-22 06:30:10,704 - app.main - INFO - 日志系统已配置，将记录到 logs
2025-04-22 06:30:10,704 - app.main - INFO - 从配置加载的 LOG_DIR: logs
2025-04-22 06:30:10,704 - app.main - INFO - 开始导入模块...
2025-04-22 06:30:10,704 - app.main - INFO - 导入database成功
2025-04-22 06:30:10,704 - app.main - INFO - 导入models成功
2025-04-22 06:30:10,704 - app.main - INFO - 导入config成功
2025-04-22 06:30:10,743 - passlib.utils.compat - DEBUG - loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>
2025-04-22 06:30:10,743 - passlib.utils.compat - DEBUG - loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>
2025-04-22 06:30:10,743 - passlib.utils.compat - DEBUG - loaded lazy attr 'BytesIO': <class '_io.BytesIO'>
2025-04-22 06:30:10,745 - passlib.registry - DEBUG - registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>
使用数据库: sqlite:///database/flow_editor.db
已设置数据库文件 /workspace/database/flow_editor.db 权限为可读写
正在创建数据库表结构...
数据库表结构创建成功！
2025-04-22 06:30:11 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:30:11,053 - langchain_chat - INFO - 日志已配置: 级别=INFO, 文件=logs/langchain.log
2025-04-22 06:30:11 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:30:11,053 - langchain_chat - INFO - Langchain debug logging enabled, writing to logs/langchain_debug.log
2025-04-22 06:30:11,318 - app.main - INFO - 导入基本路由成功
2025-04-22 06:30:11,318 - app.main - INFO - 导入workflow_router成功
2025-04-22 06:30:11,318 - app.main - INFO - 导入utils成功
2025-04-22 06:30:11,318 - app.main - INFO - 导入dependencies成功
2025-04-22 06:30:11,318 - app.main - INFO - 创建数据库表...
2025-04-22 06:30:11,319 - app.main - INFO - 数据库表创建成功
2025-04-22 06:30:11,319 - app.main - INFO - 尝试重建 Pydantic 模型以解析前向引用...
2025-04-22 06:30:11,321 - app.main - INFO - Pydantic 模型重建成功
2025-04-22 06:30:11,321 - app.main - INFO - 初始化FastAPI应用...
2025-04-22 06:30:11,327 - backend.app.utils - INFO - 从数据库获取版本信息: 0.3.4
2025-04-22 06:30:11,327 - app.main - INFO - 注册路由...
2025-04-22 06:30:11,332 - app.main - INFO - 注册user路由成功
2025-04-22 06:30:11,337 - app.main - INFO - 注册flow路由成功
2025-04-22 06:30:11,337 - app.main - INFO - 注册email路由成功
2025-04-22 06:30:11,338 - app.main - INFO - 注册auth路由成功
2025-04-22 06:30:11,338 - app.main - INFO - 注册node_templates路由成功
2025-04-22 06:30:11,338 - app.main - INFO - 注册workflow路由成功
2025-04-22 06:30:11,348 - app.main - INFO - 注册flow_variables路由成功
2025-04-22 06:30:11,348 - app.main - INFO - 注册chat路由成功
2025-04-22 06:30:11,348 - app.main - INFO - FastAPI应用初始化完成，准备开始处理请求...
INFO:     Started server process [1391429]
INFO:     Waiting for application startup.
使用自动计算的模板目录路径: /workspace/database/node_database
开始递归扫描模板目录: /workspace/database/node_database
正在扫描目录: /workspace/database/node_database
  - 在此目录找到 6 个XML文件
正在扫描目录: /workspace/database/node_database/mg400
  - 在此目录找到 67 个XML文件
正在扫描目录: /workspace/database/node_database/quick-fcpr
  - 在此目录找到 49 个XML文件
总共发现 122 个XML文件
解析XML文件: /workspace/database/node_database/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/condition.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: condition 从文件 condition.xml
解析XML文件: /workspace/database/node_database/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/select_robot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: select_robot 从文件 select_robot.xml
解析XML文件: /workspace/database/node_database/return.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: return 从文件 return.xml
解析XML文件: /workspace/database/node_database/mg400/DI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DI 从文件 DI.xml
解析XML文件: /workspace/database/node_database/mg400/GetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetCoils 从文件 GetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/CalcUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcUser 从文件 CalcUser.xml
解析XML文件: /workspace/database/node_database/mg400/RobotMode.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RobotMode 从文件 RobotMode.xml
解析XML文件: /workspace/database/node_database/mg400/GetAngle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetAngle 从文件 GetAngle.xml
解析XML文件: /workspace/database/node_database/mg400/GetInRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInRegs 从文件 GetInRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetUser 从文件 SetUser.xml
解析XML文件: /workspace/database/node_database/mg400/SetPayLoad.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetPayLoad 从文件 SetPayLoad.xml
解析XML文件: /workspace/database/node_database/mg400/GetPalletPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPalletPose 从文件 GetPalletPose.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovLUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovLUser 从文件 RelMovLUser.xml
解析XML文件: /workspace/database/node_database/mg400/CP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CP 从文件 CP.xml
解析XML文件: /workspace/database/node_database/mg400/ResetRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ResetRobot 从文件 ResetRobot.xml
解析XML文件: /workspace/database/node_database/mg400/ClearError.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ClearError 从文件 ClearError.xml
解析XML文件: /workspace/database/node_database/mg400/AccJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccJ 从文件 AccJ.xml
解析XML文件: /workspace/database/node_database/mg400/DO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DO 从文件 DO.xml
解析XML文件: /workspace/database/node_database/mg400/MovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJ 从文件 MovJ.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDI.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDI 从文件 ToolDI.xml
解析XML文件: /workspace/database/node_database/mg400/InverseSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: InverseSolution 从文件 InverseSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RelMovJUser.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelMovJUser 从文件 RelMovJUser.xml
解析XML文件: /workspace/database/node_database/mg400/MovL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovL 从文件 MovL.xml
解析XML文件: /workspace/database/node_database/mg400/Wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Wait 从文件 Wait.xml
解析XML文件: /workspace/database/node_database/mg400/GetErrorID.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetErrorID 从文件 GetErrorID.xml
解析XML文件: /workspace/database/node_database/mg400/DOGroup.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOGroup 从文件 DOGroup.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusClose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusClose 从文件 ModbusClose.xml
解析XML文件: /workspace/database/node_database/mg400/MoveJog.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MoveJog 从文件 MoveJog.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDOExecute 从文件 ToolDOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/AccL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: AccL 从文件 AccL.xml
解析XML文件: /workspace/database/node_database/mg400/MovJIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJIO 从文件 MovJIO.xml
解析XML文件: /workspace/database/node_database/mg400/Pause.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Pause 从文件 Pause.xml
解析XML文件: /workspace/database/node_database/mg400/SyncAll.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SyncAll 从文件 SyncAll.xml
解析XML文件: /workspace/database/node_database/mg400/ContinueScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ContinueScript 从文件 ContinueScript.xml
解析XML文件: /workspace/database/node_database/mg400/ModbusCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ModbusCreate 从文件 ModbusCreate.xml
解析XML文件: /workspace/database/node_database/mg400/SetArmOrientation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetArmOrientation 从文件 SetArmOrientation.xml
解析XML文件: /workspace/database/node_database/mg400/GetInBits.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetInBits 从文件 GetInBits.xml
解析XML文件: /workspace/database/node_database/mg400/DOExecute.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DOExecute 从文件 DOExecute.xml
解析XML文件: /workspace/database/node_database/mg400/SetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetHoldRegs 从文件 SetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/Tool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Tool 从文件 Tool.xml
解析XML文件: /workspace/database/node_database/mg400/ToolDO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: ToolDO 从文件 ToolDO.xml
解析XML文件: /workspace/database/node_database/mg400/Arc.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arc 从文件 Arc.xml
解析XML文件: /workspace/database/node_database/mg400/Circle.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Circle 从文件 Circle.xml
解析XML文件: /workspace/database/node_database/mg400/Sync.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Sync 从文件 Sync.xml
解析XML文件: /workspace/database/node_database/mg400/SetTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetTool 从文件 SetTool.xml
解析XML文件: /workspace/database/node_database/mg400/JointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: JointMovJ 从文件 JointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedJ 从文件 SpeedJ.xml
解析XML文件: /workspace/database/node_database/mg400/EmergencyStop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EmergencyStop 从文件 EmergencyStop.xml
解析XML文件: /workspace/database/node_database/mg400/DisableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: DisableRobot 从文件 DisableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/GetPose.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetPose 从文件 GetPose.xml
解析XML文件: /workspace/database/node_database/mg400/CalcTool.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: CalcTool 从文件 CalcTool.xml
解析XML文件: /workspace/database/node_database/mg400/PalletCreate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PalletCreate 从文件 PalletCreate.xml
解析XML文件: /workspace/database/node_database/mg400/EnableRobot.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: EnableRobot 从文件 EnableRobot.xml
解析XML文件: /workspace/database/node_database/mg400/StopDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopDrag 从文件 StopDrag.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedFactor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedFactor 从文件 SpeedFactor.xml
解析XML文件: /workspace/database/node_database/mg400/SpeedL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SpeedL 从文件 SpeedL.xml
解析XML文件: /workspace/database/node_database/mg400/MovLIO.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovLIO 从文件 MovLIO.xml
解析XML文件: /workspace/database/node_database/mg400/StartDrag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StartDrag 从文件 StartDrag.xml
解析XML文件: /workspace/database/node_database/mg400/PauseScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PauseScript 从文件 PauseScript.xml
解析XML文件: /workspace/database/node_database/mg400/SetCollisionLevel.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCollisionLevel 从文件 SetCollisionLevel.xml
解析XML文件: /workspace/database/node_database/mg400/GetHoldRegs.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: GetHoldRegs 从文件 GetHoldRegs.xml
解析XML文件: /workspace/database/node_database/mg400/SetCoils.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: SetCoils 从文件 SetCoils.xml
解析XML文件: /workspace/database/node_database/mg400/Continue.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Continue 从文件 Continue.xml
解析XML文件: /workspace/database/node_database/mg400/StopScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: StopScript 从文件 StopScript.xml
解析XML文件: /workspace/database/node_database/mg400/Arch.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: Arch 从文件 Arch.xml
解析XML文件: /workspace/database/node_database/mg400/User.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: User 从文件 User.xml
解析XML文件: /workspace/database/node_database/mg400/MovJExt.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: MovJExt 从文件 MovJExt.xml
解析XML文件: /workspace/database/node_database/mg400/RelJointMovJ.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RelJointMovJ 从文件 RelJointMovJ.xml
解析XML文件: /workspace/database/node_database/mg400/PositiveSolution.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: PositiveSolution 从文件 PositiveSolution.xml
解析XML文件: /workspace/database/node_database/mg400/RunScript.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: RunScript 从文件 RunScript.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_custom_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_custom_flag 从文件 logic_custom_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_upon 从文件 set_external_io_output_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error_upon 从文件 raise_error_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_until 从文件 set_output_until.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag 从文件 set_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_during 从文件 set_external_io_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveL.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'moveL' 已存在 (来自 moveL.xml), 将被 moveL.xml 覆盖
成功加载模板: moveL 从文件 moveL.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_block 从文件 wait_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_palet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_palet 从文件 set_palet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/raise_error.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: raise_error 从文件 raise_error.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_ready.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_ready 从文件 wait_ready.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_timer.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_timer 从文件 wait_timer.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_block.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_block 从文件 logic_block.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/if.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: if 从文件 if.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output 从文件 set_external_io_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_external_io_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_external_io_input 从文件 wait_external_io_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number_upon 从文件 set_number_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_input.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: wait_input 从文件 wait_input.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_motor.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
警告: 模板类型 'set_motor' 已存在 (来自 set_motor.xml), 将被 set_motor.xml 覆盖
成功加载模板: set_motor 从文件 set_motor.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_arithmetic.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
Traceback (most recent call last):
  File "/workspace/backend/app/services/node_template_service.py", line 139, in _parse_template
    tree = ET.parse(file_path)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 1222, in parse
    tree.parse(source, parser)
  File "/usr/lib/python3.10/xml/etree/ElementTree.py", line 580, in parse
    self._root = parser._parse_whole(source)
xml.etree.ElementTree.ParseError: no element found: line 1, column 1
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_arithmetic 从文件 math_arithmetic.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait 从文件 wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_origin.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: move_origin 从文件 move_origin.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output 从文件 set_output.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_camera 从文件 connect_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/reset_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: reset_pallet 从文件 reset_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: external_io 从文件 external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/moveP.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: moveP 从文件 moveP.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_flag_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_flag_upon 从文件 set_flag_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera_wait.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera_wait 从文件 run_camera_wait.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_output_during.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_output_during 从文件 set_output_during.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/loop.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
警告: 模板类型 'loop' 已存在 (来自 loop.xml), 将被 loop.xml 覆盖
成功加载模板: loop 从文件 loop.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/move_next_pallet.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: move_next_pallet 从文件 move_next_pallet.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/connect_external_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: connect_external_io 从文件 connect_external_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_negate.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_negate 从文件 logic_negate.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_number 从文件 set_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_flag.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_flag 从文件 logic_flag.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/run_camera.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: run_camera 从文件 run_camera.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/stop_robot_upon.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: stop_robot_upon 从文件 stop_robot_upon.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_number 从文件 math_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_position.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_position 从文件 robot_position.xml
Error parsing template /workspace/database/node_database/quick-fcpr/return.xml: no element found: line 1, column 1
警告: 未能从文件创建模板 return.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/wait_run.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
成功加载模板: wait_run 从文件 wait_run.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/math_custom_number.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: math_custom_number 从文件 math_custom_number.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/create_event.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
2025-04-22 06:30:11,354 - backend.app.startup - INFO - 正在验证DeepSeek API配置
2025-04-22 06:30:11,354 - backend.app.startup - INFO - ✓ DeepSeek API密钥已设置 (前4位: sk-f***)
2025-04-22 06:30:11,354 - backend.app.startup - INFO - DeepSeek API基础URL: https://api.deepseek.com
2025-04-22 06:30:11,354 - backend.app.startup - INFO - DeepSeek模型: deepseek-chat
2025-04-22 06:30:11,354 - backend.app.startup - INFO - ✓ DeepSeek客户端模块 (DeepSeekLLM) 导入成功
2025-04-22 06:30:11,354 - backend.app.startup - INFO - 数据库URL: 未设置
2025-04-22 06:30:11,354 - backend.app.startup - INFO - ⚠️ 调试模式已启用
2025-04-22 06:30:11,354 - backend.app.startup - INFO - API前缀: /api
2025-04-22 06:30:11,354 - backend.app.startup - INFO - CORS允许的源: http://localhost:3000, http://127.0.0.1:3000, http://172.18.0.3:3000, http://workflow-editor-frontend:3000, *
INFO:     Application startup complete.
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: create_event 从文件 create_event.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/robot_io.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: robot_io 从文件 robot_io.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_compare.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_compare 从文件 logic_compare.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/logic_operation.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: logic_operation 从文件 logic_operation.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/start_thread.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
使用命名空间 https://developers.google.com/blockly/xml 找到statement元素
成功加载模板: start_thread 从文件 start_thread.xml
解析XML文件: /workspace/database/node_database/quick-fcpr/set_external_io_output_until.xml
XML根元素: {https://developers.google.com/blockly/xml}xml
使用命名空间 https://developers.google.com/blockly/xml 找到block元素
使用命名空间 https://developers.google.com/blockly/xml 找到field元素
成功加载模板: set_external_io_output_until 从文件 set_external_io_output_until.xml
总共加载了 118 个模板
节点模板加载成功
INFO:     127.0.0.1:32874 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
INFO:     127.0.0.1:32882 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 06:33:24,461 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 06:33:24,462 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:33:24,466 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:33:24,466 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMDM1NTd9.LCRDF6Q3wXWmEwimeRGDDF-IAhslhvUYIJ5juRW4iao', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:33:24,469 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 401 (耗时: 0.0068s)
INFO:     127.0.0.1:32890 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 401 Unauthorized
2025-04-22 06:33:24,470 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 401 (耗时: 0.0037s)
INFO:     127.0.0.1:32904 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 401 Unauthorized
2025-04-22 06:33:24,530 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:33:24,530 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:33:24,533 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 401 (耗时: 0.0027s)
INFO:     127.0.0.1:32904 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 401 Unauthorized
2025-04-22 06:45:26,023 - app.main - INFO - 收到请求: POST /users/login (来自: 127.0.0.1)
2025-04-22 06:45:26,024 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '25', 'sec-ch-ua-platform': '"Windows"', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/x-www-form-urlencoded', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:26,025 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-04-22 06:45:26,025 - multipart.multipart - DEBUG - Calling on_field_name with data[0:8]
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_data with data[9:12]
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_start with no data
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_name with data[13:21]
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_data with data[22:25]
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_field_end with no data
2025-04-22 06:45:26,026 - multipart.multipart - DEBUG - Calling on_end with no data
2025-04-22 06:45:26,035 - passlib.handlers.bcrypt - DEBUG - detected 'bcrypt' backend, version '4.0.1'
2025-04-22 06:45:26,036 - passlib.handlers.bcrypt - DEBUG - 'bcrypt' backend lacks $2$ support, enabling workaround
2025-04-22 06:45:26,225 - app.main - INFO - 请求完成: POST /users/login - 200 (耗时: 0.2013s)
INFO:     127.0.0.1:52814 - "POST /users/login HTTP/1.1" 200 OK
INFO:     127.0.0.1:52830 - "OPTIONS /auth/verify-token HTTP/1.1" 200 OK
2025-04-22 06:45:26,765 - app.main - INFO - 收到请求: GET /auth/verify-token (来自: 127.0.0.1)
2025-04-22 06:45:26,765 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:26,773 - app.main - INFO - 请求完成: GET /auth/verify-token - 200 (耗时: 0.0072s)
INFO:     127.0.0.1:52814 - "GET /auth/verify-token HTTP/1.1" 200 OK
INFO:     127.0.0.1:52830 - "OPTIONS /flows HTTP/1.1" 200 OK
2025-04-22 06:45:26,888 - app.main - INFO - 收到请求: GET /flows (来自: 127.0.0.1)
2025-04-22 06:45:26,889 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:26,890 - app.main - INFO - 请求完成: GET /flows - 307 (耗时: 0.0009s)
INFO:     127.0.0.1:52814 - "GET /flows HTTP/1.1" 307 Temporary Redirect
INFO:     127.0.0.1:52830 - "OPTIONS /flows/ HTTP/1.1" 200 OK
2025-04-22 06:45:26,940 - app.main - INFO - 收到请求: GET /flows/ (来自: 127.0.0.1)
2025-04-22 06:45:26,940 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:26,947 - app.main - INFO - 请求完成: GET /flows/ - 200 (耗时: 0.0066s)
INFO:     127.0.0.1:52814 - "GET /flows/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /flows?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 06:45:27,090 - app.main - INFO - 收到请求: GET /flows (来自: 127.0.0.1)
2025-04-22 06:45:27,091 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:27,092 - app.main - INFO - 请求完成: GET /flows - 307 (耗时: 0.0009s)
INFO:     127.0.0.1:52814 - "GET /flows?skip=0&limit=100 HTTP/1.1" 307 Temporary Redirect
INFO:     127.0.0.1:52840 - "OPTIONS /flows/?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 06:45:27,163 - app.main - INFO - 收到请求: GET /flows/ (来自: 127.0.0.1)
2025-04-22 06:45:27,164 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:27,177 - app.main - INFO - 请求完成: GET /flows/ - 200 (耗时: 0.0127s)
INFO:     127.0.0.1:52814 - "GET /flows/?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:52830 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected HTTP/1.1" 200 OK
2025-04-22 06:45:28,115 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:45:28,116 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:28,129 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:45:28,134 - app.main - INFO - 收到请求: POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected (来自: 127.0.0.1)
2025-04-22 06:45:28,135 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '4', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:28,136 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0196s)
INFO:     127.0.0.1:52814 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 06:45:28,139 - backend.app.services.user_flow_service - INFO - 设置用户 27c83191-caae-4df4-a217-b6398a62061b 最后选择的流程图ID: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:45:28,139 - app.main - INFO - 请求完成: POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected - 200 (耗时: 0.0042s)
INFO:     127.0.0.1:52818 - "POST /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/set-as-last-selected HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /node-templates/ HTTP/1.1" 200 OK
2025-04-22 06:45:28,216 - app.main - INFO - 收到请求: GET /node-templates/ (来自: 127.0.0.1)
2025-04-22 06:45:28,216 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:28,222 - app.main - INFO - 请求完成: GET /node-templates/ - 200 (耗时: 0.0059s)
INFO:     127.0.0.1:52814 - "GET /node-templates/ HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
2025-04-22 06:45:28,324 - app.main - INFO - 收到请求: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:45:28,325 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '16026', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:28,340 - app.main - INFO - 请求完成: PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0152s)
INFO:     127.0.0.1:52814 - "PUT /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 06:45:30,339 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 06:45:30,340 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:30,346 - backend.app.routers.flow - INFO - Attempting to get last valid chat ID for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb for user: 27c83191-caae-4df4-a217-b6398a62061b
2025-04-22 06:45:30,356 - backend.app.routers.flow - INFO - Recorded last chat ID f5585b38-840b-4e29-a94f-7b851319585c is valid for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb.
2025-04-22 06:45:30,357 - backend.app.routers.flow - INFO - Returning last chat ID for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:45:30,358 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 200 (耗时: 0.0177s)
INFO:     127.0.0.1:52814 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 06:45:30,391 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:45:30,392 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:30,398 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:45:30,399 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:45:30,401 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:45:30,447 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:45:30,448 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:45:30,448 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:45:30,448 - database.embedding.service - INFO - 创建EmbeddingService单例实例
2025-04-22 06:45:30,448 - database.embedding.service - INFO - 初始化EmbeddingService，使用LMStudio API: http://localhost:1234/v1
2025-04-22 06:45:30,448 - database.embedding.lmstudio_client - INFO - 初始化LMStudio客户端，API基础URL: http://localhost:1234/v1
2025-04-22 06:45:30,448 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:45:30,449 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:45:30,451 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0588s)
INFO:     127.0.0.1:52814 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
INFO:     127.0.0.1:52840 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:45:30,523 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:45:30,523 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:30,527 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:45:30,528 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:45:30,529 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:45:30,575 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:45:30,575 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:45:30,575 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:45:30,575 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:45:30,575 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:45:30,576 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0532s)
INFO:     127.0.0.1:52814 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:45:30,591 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:45:30,591 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:45:30,592 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:45:30,592 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:45:30,593 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:45:30,623 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:45:30,623 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:45:30,623 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:45:30,623 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:45:30,623 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:45:30,624 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0332s)
INFO:     127.0.0.1:52818 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:46:28,921 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 06:46:28,921 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:46:28,923 - backend.app.routers.flow - INFO - Attempting to get last valid chat ID for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb for user: 27c83191-caae-4df4-a217-b6398a62061b
2025-04-22 06:46:28,923 - backend.app.routers.flow - INFO - Recorded last chat ID f5585b38-840b-4e29-a94f-7b851319585c is valid for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb.
2025-04-22 06:46:28,923 - backend.app.routers.flow - INFO - Returning last chat ID for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:46:28,924 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 200 (耗时: 0.0023s)
INFO:     127.0.0.1:54568 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 06:46:28,942 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:46:28,942 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:46:28,943 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:46:28,943 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:46:28,944 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:46:28,974 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:46:28,975 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:46:28,975 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:46:28,975 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:46:28,975 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:46:28,976 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0347s)
INFO:     127.0.0.1:54568 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 06:46:29,037 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:46:29,037 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:46:29,039 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:46:29,040 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:46:29,040 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:46:29,071 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:46:29,071 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:46:29,071 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:46:29,071 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:46:29,071 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:46:29,073 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0354s)
INFO:     127.0.0.1:54568 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:46:29,141 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:46:29,141 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:46:29,142 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:46:29,143 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:46:29,143 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:46:29,178 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:46:29,178 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:46:29,178 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:46:29,178 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:46:29,178 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:46:29,179 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0385s)
INFO:     127.0.0.1:54580 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:49:26,867 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:49:26,867 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:26,868 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:26,868 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:26,869 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:26,901 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:26,901 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:26,901 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:26,902 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:26,902 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:26,903 - app.main - INFO - 收到请求: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat (来自: 127.0.0.1)
2025-04-22 06:49:26,903 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:26,904 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0370s)
INFO:     127.0.0.1:43976 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:49:26,905 - backend.app.routers.flow - INFO - Attempting to get last valid chat ID for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb for user: 27c83191-caae-4df4-a217-b6398a62061b
2025-04-22 06:49:26,905 - backend.app.routers.flow - INFO - Recorded last chat ID f5585b38-840b-4e29-a94f-7b851319585c is valid for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb.
2025-04-22 06:49:26,905 - backend.app.routers.flow - INFO - Returning last chat ID for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:49:26,906 - app.main - INFO - 请求完成: GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat - 200 (耗时: 0.0021s)
INFO:     127.0.0.1:43992 - "GET /flows/61aa7e47-7611-41e8-b7bb-a438f0c09adb/last_chat HTTP/1.1" 200 OK
2025-04-22 06:49:26,959 - app.main - INFO - 收到请求: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb (来自: 127.0.0.1)
2025-04-22 06:49:26,959 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:26,965 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:26,966 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:26,967 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:27,004 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:27,004 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:27,004 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:27,004 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:27,004 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:27,005 - app.main - INFO - 请求完成: GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb - 200 (耗时: 0.0452s)
INFO:     127.0.0.1:43992 - "GET /chats/flow/61aa7e47-7611-41e8-b7bb-a438f0c09adb?skip=0&limit=100 HTTP/1.1" 200 OK
2025-04-22 06:49:27,021 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:49:27,021 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:27,023 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:27,023 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:27,023 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:27,070 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:27,070 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:27,070 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:27,070 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:27,070 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:27,072 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0505s)
INFO:     127.0.0.1:43992 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
2025-04-22 06:49:27,140 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c (来自: 127.0.0.1)
2025-04-22 06:49:27,141 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'application/json, text/plain, */*', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:27,145 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:27,145 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:27,147 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:27,187 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:27,187 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:27,187 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:27,187 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:27,187 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:27,188 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c - 200 (耗时: 0.0471s)
INFO:     127.0.0.1:43976 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c HTTP/1.1" 200 OK
INFO:     127.0.0.1:48842 - "OPTIONS /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 200 OK
2025-04-22 06:49:50,745 - app.main - INFO - 收到请求: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages (来自: 127.0.0.1)
2025-04-22 06:49:50,746 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'content-length': '57', 'sec-ch-ua-platform': '"Windows"', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJleHAiOjE3NDUzMjIzMjZ9.XNQfdBTeGpmqp_Kq-cyqGM1b2ZMtEWK8naMSBDWHYF8', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'content-type': 'application/json', 'sec-ch-ua-mobile': '?0', 'accept': '*/*', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:50,751 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:50,752 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:50,753 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:50,789 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:50,791 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:50,791 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:50,792 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:50,793 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:50,794 - backend.app.routers.chat - INFO - Flow ownership 验证通过 for flow: 61aa7e47-7611-41e8-b7bb-a438f0c09adb linked to chat: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:49:50,794 - backend.app.routers.chat - INFO - 为 chat f5585b38-840b-4e29-a94f-7b851319585c 创建/设置了新的事件队列
2025-04-22 06:49:50,794 - backend.app.routers.chat - INFO - 已为 chat f5585b38-840b-4e29-a94f-7b851319585c 启动后台事件处理任务
2025-04-22 06:49:50,795 - app.main - INFO - 请求完成: POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages - 202 (耗时: 0.0488s)
INFO:     127.0.0.1:48842 - "POST /chats/f5585b38-840b-4e29-a94f-7b851319585c/messages HTTP/1.1" 202 Accepted
2025-04-22 06:49:50,795 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 开始处理消息并发布事件...
2025-04-22 06:49:50,795 - backend.deepseek - INFO - 初始化DeepSeek客户端，使用模型: deepseek-chat
2025-04-22 06:49:50,795 - httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2025-04-22 06:49:50,796 - httpx - DEBUG - load_verify_locations cafile='/home/vscode/.local/lib/python3.10/site-packages/certifi/cacert.pem'
2025-04-22 06:49:50,826 - backend.app.services.chat_service - INFO - Initializing WorkflowChain in ChatService (example setup)
2025-04-22 06:49:50,826 - backend.app.services.chat_service - INFO - Initializing RAGChain in ChatService (example setup)
2025-04-22 06:49:50,826 - database.embedding.service - INFO - Initializing DatabaseEmbeddingService...
2025-04-22 06:49:50,827 - database.embedding.service - INFO - DatabaseEmbeddingService initialized.
2025-04-22 06:49:50,827 - backend.langchainchat.chains.rag_chain - INFO - RAG chain created successfully using LCEL.
2025-04-22 06:49:50,827 - backend.app.services.chat_service - INFO - Processing message for chat f5585b38-840b-4e29-a94f-7b851319585c: 我的系统提示是什么
...
2025-04-22 06:49:50,841 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 user 消息
2025-04-22 06:49:50,841 - backend.app.services.chat_service - INFO - ChatService attempting to load history for chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:49:50,841 - backend.app.services.chat_service - ERROR - ChatService failed to load history for chat f5585b38-840b-4e29-a94f-7b851319585c: object of type 'property' has no len()
Traceback (most recent call last):
  File "/workspace/backend/app/services/chat_service.py", line 282, in process_chat_message
    logger.info(f"ChatService loaded {len(history_messages)} messages for chat {chat_id}.")
TypeError: object of type 'property' has no len()
2025-04-22 06:49:50,841 - backend.app.services.chat_service - INFO - Chat f5585b38-840b-4e29-a94f-7b851319585c associated with flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:49:50,841 - backend.app.services.chat_service - DEBUG - Invoking WorkflowChain for chat f5585b38-840b-4e29-a94f-7b851319585c with input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:49:50,841 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain _acall received input keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:49:50,841 - backend.langchainchat.chains.workflow_chain - CRITICAL - WorkflowChain defined input_keys: ['user_input', 'db_session', 'flow_id', 'chat_id', 'history']
2025-04-22 06:49:50,841 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain processing input: 我的系统提示是什么
... for flow_id: 61aa7e47-7611-41e8-b7bb-a438f0c09adb, chat_id: f5585b38-840b-4e29-a94f-7b851319585c
2025-04-22 06:49:50,841 - backend.langchainchat.chains.workflow_chain - INFO - WorkflowChain received 0 history messages from input.
2025-04-22 06:49:50,841 - backend.langchainchat.chains.workflow_chain - INFO - Number of history messages prepared for prompt: 0
2025-04-22 06:49:50,842 - backend.langchainchat.chains.workflow_chain - INFO - Successfully fetched flow context for flow 61aa7e47-7611-41e8-b7bb-a438f0c09adb
2025-04-22 06:49:50,842 - backend.langchainchat.chains.workflow_chain - INFO - Formatted prompt using template. Total messages: 2
2025-04-22 06:49:50,842 - backend.langchainchat.chains.workflow_chain - INFO - Making initial non-streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 06:49:50,842 - backend.deepseek - DEBUG - Executing non-streaming chat completion...
2025-04-22 06:49:50,842 - backend.deepseek - INFO - ===== DEEPSEEK API 请求详情 (非流式) =====
2025-04-22 06:49:50,842 - backend.deepseek - INFO - 消息 1 (system) 完整内容:
2025-04-22 06:49:50,842 - backend.deepseek - INFO -   你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
2025-04-22 06:49:50,842 - backend.deepseek - INFO -   你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。
2025-04-22 06:49:50,842 - backend.deepseek - INFO -   
2025-04-22 06:49:50,842 - backend.deepseek - INFO -   当前流程图上下文:
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   ---
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   流程图名称: test1\n节点数量: 28\n连接数量: 0
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   ---
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 消息 2 (user) 完整内容:
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   我的系统提示是什么
2025-04-22 06:49:50,843 - backend.deepseek - INFO -   
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 模型: deepseek-chat
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 温度: 0.3
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 最大令牌数: 1000
2025-04-22 06:49:50,843 - backend.deepseek - INFO - JSON模式: False
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 流式响应: False
2025-04-22 06:49:50,843 - backend.deepseek - INFO - ==================================
2025-04-22 06:49:50,843 - backend.deepseek - DEBUG - 调用DeepSeek API (非流式): 模型=deepseek-chat, 温度=0.3, JSON模式=False, 工具数=0
2025-04-22 06:49:50,843 - backend.deepseek - INFO - 开始非流式API调用
2025-04-22 06:49:50,847 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': '你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。\n你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。\n\n当前流程图上下文:\n---\n流程图名称: test1\\n节点数量: 28\\n连接数量: 0\n---\n'}, {'role': 'user', 'content': '我的系统提示是什么\n'}], 'model': 'deepseek-chat', 'max_tokens': 1000, 'stream': False, 'temperature': 0.3}}
2025-04-22 06:49:50,848 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/chat/completions
2025-04-22 06:49:50,849 - httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-04-22 06:49:51,006 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fc5aaf47070>
2025-04-22 06:49:51,007 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7fc5abad79c0> server_hostname='api.deepseek.com' timeout=5.0
2025-04-22 06:49:51,036 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7fc5aaf47880>
2025-04-22 06:49:51,037 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-04-22 06:49:51,037 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-04-22 06:49:51,038 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-04-22 06:49:51,038 - httpcore.http11 - DEBUG - send_request_body.complete
2025-04-22 06:49:51,038 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-04-22 06:49:51,190 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 22 Apr 2025 06:49:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'0aead37293f78d6211686cf3738082fc'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=6TLmLH99B6rqMZYgodMZEnYOIygJMHdgWHMcCqzkPz4-1745304591-1.0.1.1-OwRBRzoejF6rF9rIiTFBTdmpUYbgJOtbPFN0C.m4Xuhi.rFGs34OvtL4CDpMLYjVDazTY5E2egncCjEir89DbRsxv8l5Dut1Wrc.kE.m7C8; path=/; expires=Tue, 22-Apr-25 07:19:51 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'93432efe1888e021-NRT'), (b'Content-Encoding', b'gzip')])
2025-04-22 06:49:51,192 - httpx - INFO - HTTP Request: POST https://api.deepseek.com/chat/completions "HTTP/1.1 200 OK"
2025-04-22 06:49:51,193 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-04-22 06:49:59,068 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-04-22 06:49:59,068 - httpcore.http11 - DEBUG - response_closed.started
2025-04-22 06:49:59,069 - httpcore.http11 - DEBUG - response_closed.complete
2025-04-22 06:49:59,069 - openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/chat/completions "200 OK" Headers({'date': 'Tue, 22 Apr 2025 06:49:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '0aead37293f78d6211686cf3738082fc', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=6TLmLH99B6rqMZYgodMZEnYOIygJMHdgWHMcCqzkPz4-1745304591-1.0.1.1-OwRBRzoejF6rF9rIiTFBTdmpUYbgJOtbPFN0C.m4Xuhi.rFGs34OvtL4CDpMLYjVDazTY5E2egncCjEir89DbRsxv8l5Dut1Wrc.kE.m7C8; path=/; expires=Tue, 22-Apr-25 07:19:51 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None', 'server': 'cloudflare', 'cf-ray': '93432efe1888e021-NRT', 'content-encoding': 'gzip'})
2025-04-22 06:49:59,070 - openai._base_client - DEBUG - request_id: None
2025-04-22 06:49:59,076 - backend.deepseek - INFO - 非流式API调用完成，接收到文本内容，长度: 141
2025-04-22 06:49:59,076 - backend.deepseek - INFO - ===== DEEPSEEK API 响应详情 (非流式) =====
2025-04-22 06:49:59,076 - backend.deepseek - INFO - 响应数据:
2025-04-22 06:49:59,076 - backend.deepseek - INFO -   根据当前的流程图上下文信息，您的系统提示如下：
2025-04-22 06:49:59,076 - backend.deepseek - INFO -   
2025-04-22 06:49:59,077 - backend.deepseek - INFO -   **流程图名称**: test1  
2025-04-22 06:49:59,077 - backend.deepseek - INFO -   **节点数量**: 28  
2025-04-22 06:49:59,077 - backend.deepseek - INFO -   **连接数量**: 0  
2025-04-22 06:49:59,077 - backend.deepseek - INFO -   
2025-04-22 06:49:59,077 - backend.deepseek - INFO -   目前流程图中有28个节点，但尚未建立任何连接（连线）。如果您需要进一步操作（例如添加连接、修改节点或生成流程图），可以告诉我具体需求！
2025-04-22 06:49:59,077 - backend.deepseek - INFO - ==================================
2025-04-22 06:49:59,077 - backend.deepseek - INFO - DeepSeek API调用成功 (非流式)
2025-04-22 06:49:59,077 - backend.langchainchat.chains.workflow_chain - INFO - No tool calls detected. Making streaming LLM call (with history & flow context) for chat f5585b38-840b-4e29-a94f-7b851319585c...
2025-04-22 06:49:59,077 - app.main - INFO - 收到请求: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c/events (来自: 127.0.0.1)
2025-04-22 06:49:59,077 - app.main - DEBUG - 请求头: {'host': 'localhost:8000', 'connection': 'keep-alive', 'sec-ch-ua-platform': '"Windows"', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36', 'accept': 'text/event-stream', 'sec-ch-ua': '"Google Chrome";v="135", "Not-A.Brand";v="8", "Chromium";v="135"', 'sec-ch-ua-mobile': '?0', 'origin': 'http://localhost:3000', 'sec-fetch-site': 'same-site', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': 'http://localhost:3000/', 'accept-encoding': 'gzip, deflate, br, zstd', 'accept-language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6'}
2025-04-22 06:49:59,078 - backend.app.services.chat_service - DEBUG - WorkflowChain returned type: <class 'dict'>
2025-04-22 06:49:59,078 - backend.app.services.chat_service - ERROR - Error in process_chat_message for chat f5585b38-840b-4e29-a94f-7b851319585c: 'WorkflowChainOutput' object has no attribute 'stream_generator'
Traceback (most recent call last):
  File "/workspace/backend/app/services/chat_service.py", line 331, in process_chat_message
    if chain_output_obj.stream_generator:
  File "/home/vscode/.local/lib/python3.10/site-packages/pydantic/main.py", line 811, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'WorkflowChainOutput' object has no attribute 'stream_generator'
2025-04-22 06:49:59,097 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 06:49:59,098 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 收到非流式响应: {'nodes': [], 'connections': [], 'summary': '抱歉，处理您的消息时遇到问题。', 'error': "'WorkflowChainOutput' object has no attribute 'stream_generator'", 'tool_calls_info': None, 'tool_results_info': None}
2025-04-22 06:49:59,099 - backend.app.routers.chat - INFO - 收到对 chat f5585b38-840b-4e29-a94f-7b851319585c 事件流的 GET 请求
2025-04-22 06:49:59,099 - backend.app.routers.chat - INFO - 找到 chat f5585b38-840b-4e29-a94f-7b851319585c 的事件队列，准备发送 SSE 事件
2025-04-22 06:49:59,100 - backend.app.routers.chat - ERROR - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] WorkflowChainOutput contained an error: 'WorkflowChainOutput' object has no attribute 'stream_generator'
2025-04-22 06:49:59,100 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 准备放入流结束标记到队列
2025-04-22 06:49:59,100 - app.main - INFO - 请求完成: GET /chats/f5585b38-840b-4e29-a94f-7b851319585c/events - 200 (耗时: 0.0230s)

======== DEEPSEEK API 请求 (非流式) ========
消息数量: 2
消息 1 (system):
你是一个专业的流程图 AI 助手。请根据用户的指令和当前的对话历史，以及下方提供的当前流程图上下文信息，来理解用户的意图并作出回应。
你可以使用提供的工具来创建、修改流程图，或者直接回答用户的问题。请用中文回答。

当前流程图上下文:
---
流程图名称: test1\n节点数量: 28\n连接数量: 0
---

消息 2 (user):
我的系统提示是什么


模型: deepseek-chat
温度: 0.3
最大令牌数: 1000
JSON模式: False
流式响应: False
======================================


======== DEEPSEEK API 响应结果 (非流式) ========
根据当前的流程图上下文信息，您的系统提示如下：

**流程图名称**: test1  
**节点数量**: 28  
**连接数量**: 0  

目前流程图中有28个节点，但尚未建立任何连接（连线）。如果您需要进一步操作（例如添加连接、修改节点或生成流程图），可以告诉我具体需求！
========================================

INFO:     127.0.0.1:48842 - "GET /chats/f5585b38-840b-4e29-a94f-7b851319585c/events HTTP/1.1" 200 OK
2025-04-22 06:49:59,102 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 已放入流结束标记
2025-04-22 06:49:59,102 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 准备保存最终的助手回复 (长度: 15) ...
2025-04-22 06:49:59,107 - backend.app.services.chat_service - INFO - 已向聊天 f5585b38-840b-4e29-a94f-7b851319585c 添加一条 assistant 消息
2025-04-22 06:49:59,107 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 成功保存助手回复。
2025-04-22 06:49:59,107 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 关闭后台 DB Session
2025-04-22 06:49:59,108 - backend.app.routers.chat - INFO - [BG Task f5585b38-840b-4e29-a94f-7b851319585c] 处理和发布事件的任务完成。
2025-04-22 06:49:59,108 - backend.app.routers.chat - INFO - 已发送第一个 SSE 事件 (type: final_result) 到 chat f5585b38-840b-4e29-a94f-7b851319585c 的监听者
2025-04-22 06:49:59,108 - backend.app.routers.chat - INFO - 收到 chat f5585b38-840b-4e29-a94f-7b851319585c 的流结束标记，关闭 SSE 连接
2025-04-22 06:49:59,108 - backend.app.routers.chat - INFO - SSE 事件发送器完成或终止 for chat f5585b38-840b-4e29-a94f-7b851319585c
