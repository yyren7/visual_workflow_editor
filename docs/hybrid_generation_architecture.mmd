%%{init: {
  'theme': 'base',
  'themeVariables': {
    'primaryColor': '#E3F2FD',
    'primaryTextColor': '#1565C0',
    'primaryBorderColor': '#1976D2',
    'lineColor': '#1976D2',
    'secondaryColor': '#F3E5F5',
    'tertiaryColor': '#E8F5E8',
    'background': '#FFFFFF',
    'mainBkg': '#E3F2FD',
    'secondBkg': '#F3E5F5',
    'tertiaryBkg': '#E8F5E8',
    'node0Fill': '#FFEBEE',
    'node1Fill': '#E1F5FE',
    'node2Fill': '#F1F8E9'
  }
}}%%

flowchart TD
    %% ===== 混合生成架构层次图 =====
    
    %% 用户输入层
    A["`**[入力] ユーザー自然言語入力**
    📝 自然言語による要求記述`"]
    
    %% LLM处理层 - 创造性任务
    subgraph LLM_ZONE ["`🧠 **LLM責任ゾーン** - 創造性・解釈タスク`"]
        B1["`**[解析] 意図理解・抽出**
        🔍 自然言語→構造化データ
        ⚡ コンテキスト: 最大10履歴メッセージ`"]
        
        B2["`**[分解] タスク構造化**
        📋 高レベルタスクリスト生成
        ⚡ プロンプト: タスク定義テンプレート`"]
        
        B3["`**[詳細化] モジュールステップ生成**
        🔧 並列処理で実行可能ステップ化
        ⚡ 制約: 利用可能ブロック知識ベース`"]
    end
    
    %% 用户审核层
    subgraph REVIEW_ZONE ["`👤 **ユーザー審査ゾーン** - 品質管理`"]
        C1["`**[確認] タスクリスト審査**
        ✅ 承認 / 📝 修正要求`"]
        
        C2["`**[確認] モジュール詳細審査**
        ✅ 承認 / 📝 修正要求`"]
    end
    
    %% 模板引擎层 - 精确代码生成
    subgraph TEMPLATE_ZONE ["`⚙️ **テンプレートエンジン責任ゾーン** - 精密コード生成`"]
        D1["`**[生成] 個別XML生成**
        📄 テンプレートベース変換
        ⚡ 構文精度: 100%保証`"]
        
        D2["`**[マッピング] パラメータ関連付け**
        🔗 論理パラメータ→物理スロット
        ⚡ データ整合性チェック`"]
        
        D3["`**[統合] XML結合処理**
        🔄 個別XML→統合フロー
        ⚡ 構造整合性保持`"]
        
        D4["`**[完成] 最終XML連結**
        ✨ 実行可能プログラム出力
        ⚡ 完全自動化処理`"]
    end
    
    %% 输出层
    E["`**[出力] 実行可能XMLプログラム**
    🎯 ロボット制御コード完成`"]

    %% ==== メインフロー（太線） ====
    A ==>|"自然言語入力"| B1
    B1 ==> B2
    B2 ==>|"構造化タスクデータ"| C1
    C1 ==>|"承認済み"| B3
    B3 ==>|"詳細ステップデータ"| C2
    C2 ==>|"生成開始"| D1
    D1 ==> D2
    D2 ==> D3
    D3 ==> D4
    D4 ==>|"完成プログラム"| E

    %% ==== フィードバックループ（点線） ====
    C1 -.->|"修正要求"| B2
    C2 -.->|"修正要求"| B3

    %% ==== 上下文最適化情報（注釈） ====
    
    subgraph CONTEXT_OPT ["`💡 **コンテキスト最適化戦略**`"]
        direction TB
        O1["`**Token削減技術**
        • 履歴制限: 最大10メッセージ
        • 段階的処理: 必要情報のみ伝播
        • 構造化状態: Pydanticモデル活用`"]
        
        O2["`**LLM効率化**
        • 並列タスク処理
        • テンプレート化プロンプト
        • ストリーミング出力`"]
        
        O3["`**テンプレート精度**
        • XMLスキーマ厳密準拠  
        • パラメータ検証
        • 自動構文チェック`"]
    end

    %% ==== ハイブリッド分離点の強調 ====
    subgraph SEPARATION ["`⚡ **ハイブリッド分離点**`"]
        SEP1["`**創造性 ↔ 精密性**
        LLM: 解釈・推論・創造
        TemplateEngine: 構文・精度・実行`"]
    end

    %% ==== スタイリング ====
    classDef llmNode fill:#E1F5FE,stroke:#0277BD,stroke-width:3px,color:#01579B,font-weight:bold
    classDef reviewNode fill:#F3E5F5,stroke:#7B1FA2,stroke-width:3px,color:#4A148C,font-weight:bold  
    classDef templateNode fill:#E8F5E8,stroke:#388E3C,stroke-width:3px,color:#1B5E20,font-weight:bold
    classDef inputOutputNode fill:#FFEBEE,stroke:#D32F2F,stroke-width:4px,color:#B71C1C,font-weight:bold
    classDef optimizationNode fill:#FFF3E0,stroke:#F57C00,stroke-width:2px,color:#E65100
    classDef separationNode fill:#FCE4EC,stroke:#C2185B,stroke-width:3px,color:#880E4F,font-weight:bold

    %% ノードクラス適用
    class B1,B2,B3 llmNode
    class C1,C2 reviewNode
    class D1,D2,D3,D4 templateNode
    class A,E inputOutputNode
    class O1,O2,O3 optimizationNode
    class SEP1 separationNode

    %% サブグラフスタイリング
    LLM_ZONE ~~~ REVIEW_ZONE
    REVIEW_ZONE ~~~ TEMPLATE_ZONE
    TEMPLATE_ZONE ~~~ CONTEXT_OPT
    CONTEXT_OPT ~~~ SEPARATION 